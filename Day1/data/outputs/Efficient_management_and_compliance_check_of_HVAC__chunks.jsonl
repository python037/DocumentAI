{"id": "Efficient_management_and_compliance_check_of_HVAC__p1_0", "text": "Semantic Web -1 (2024) 1–31\n1\nDOI 10.3233/SW-243595\nIOS Press\nCORRECTED PROOF\nEfﬁcient management and compliance check\nof HVAC information in the building design\nphase using Semantic Web technologies\nAli Kücükavci a,*, Mikki Seidenschnur a,b, Pieter Pauwels d, Mads Holten Rasmussen c and\nChristian Anker Hviid a\na Department of Civil Engineering, Technical University of Denmark, Copenhagen, Denmark\nE-mails: alikuc@byg.dtu.dk, msei@ramboll.dk, cah@byg.dtu.dk\nb Ramboll, Copenhagen, Denmark\nc Niras, Allerød, Denmark\nE-mail: mhra@niras.dk\nd Department of the Built Environment, Eindhoven University of Technology, Eindhoven, Netherlands\nE-mail: p.pauwels@tue.nl\nEditor: Cogan Shimizu, Wright State University, USA\nSolicited reviews: Joern Ploennigs, University of Rostock, Germany; Cogan Shimizu, Wright State University, USA; one anonymous reviewer\nAbstract. Several OWL ontologies have been developed for the AEC industry to manage domain-speciﬁc information, yet they\noften overlook the domain of building services and HVAC components. The Flow Systems Ontology was recently proposed to\naddress this need, but it does not include HVAC components’ size and capacity-related properties. Also, despi", "metadata": {"doc_id": "Efficient_management_and_compliance_check_of_HVAC_", "source_path": "data\\pdfs\\Efficient_management_and_compliance_check_of_HVAC_.pdf", "page": 1, "char_start": 0, "char_end": 1200, "section_title": "A document-centric AEC industry", "section_path": ["Introduction", "A document-centric AEC industry"], "scanned": false}}
{"id": "Efficient_management_and_compliance_check_of_HVAC__p1_1", "text": " building services and HVAC components. The Flow Systems Ontology was recently proposed to\naddress this need, but it does not include HVAC components’ size and capacity-related properties. Also, despite their strengths\nin representing domain-speciﬁc knowledge, ontologies cannot efﬁciently identify poor data quality in BIM models. A four-\nfold contribution is made in this research paper to deﬁne and improve the data quality of HVAC information by (1) extending\nthe existing Flow Systems Ontology, (2) proposing the new Flow Properties Ontology, (3) proposing an HVAC rule set for\ncompliance checking, and (4), moreover, we use Semantic Web technologies to demonstrate the beneﬁts of efﬁcient HVAC data\nmanagement when sizing components. The demonstration case shows that we can represent the data model in a distributed way,\nvalidate it using 36 SHACL shapes and use SPARQL to determine the pressure and ﬂow rate of fans and pumps.\nKeywords: Building information modelling, Heating, Ventilation and Air Conditioning (HVAC), SHACL, Semantic Web\ntechnologies, Linked Data, compliance checking, SPARQL\n1. Introduction\n1.1. A document-centric AEC industry\nArchitecture, Engineering and Construction (A", "metadata": {"doc_id": "Efficient_management_and_compliance_check_of_HVAC_", "source_path": "data\\pdfs\\Efficient_management_and_compliance_check_of_HVAC_.pdf", "page": 1, "char_start": 1000, "char_end": 2200, "section_title": "A document-centric AEC industry", "section_path": ["Introduction", "A document-centric AEC industry"], "scanned": false}}
{"id": "Efficient_management_and_compliance_check_of_HVAC__p1_2", "text": "d Air Conditioning (HVAC), SHACL, Semantic Web\ntechnologies, Linked Data, compliance checking, SPARQL\n1. Introduction\n1.1. A document-centric AEC industry\nArchitecture, Engineering and Construction (AEC) projects have become more technically complex and involve\nmany stakeholders that must exchange information to complete a project successfully [33]. Since the Building In-\nformation Modeling (BIM) methodology was introduced in the early to mid-2000s [48], the AEC industry has\n*Corresponding author. E-mail: alikuc@byg.dtu.dk.\n1570-0844 © 2024 – The authors. Published by IOS Press. This is an Open Access article distributed under the terms of the\nCreative Commons Attribution License (CC BY 4.0).", "metadata": {"doc_id": "Efficient_management_and_compliance_check_of_HVAC_", "source_path": "data\\pdfs\\Efficient_management_and_compliance_check_of_HVAC_.pdf", "page": 1, "char_start": 2000, "char_end": 2701, "section_title": "A document-centric AEC industry", "section_path": ["Introduction", "A document-centric AEC industry"], "scanned": false}}
{"id": "Efficient_management_and_compliance_check_of_HVAC__p2_3", "text": "2\nA. Kücükavci et al. / Efﬁcient management and compliance check of HVAC information\nexperienced improvements in coordination and communication between project stakeholders and digital tools. The\nBIM methodology aims to achieve a more collaborative workﬂow and addresses the need for a Digital Information\nHub [68]. It provides a method for managing structured, accessible, and reliable building data to represent the phys-\nical and functional characteristics of a 3D building model. Current BIM applications have improved the workﬂows\nacross the building life cycle and typically include 3D modelling. For that reason, the use of BIM is focused on\nphases of the building life cycle where 3D modelling is a requirement [21]. Today, BIM methodology is mainly\nbased on a document-centric approach in the AEC industry, leading to poor data management across the building\nlife cycle, disciplines, and digital tools [16]. Data is often outdated and not in sync with the actual building model,\nfor which no live access is available.\nThe Industry Foundation Classes (IFC) is currently the standard format of building information and has been\napplied to exchange the needed information among stakeholders, ma", "metadata": {"doc_id": "Efficient_management_and_compliance_check_of_HVAC_", "source_path": "data\\pdfs\\Efficient_management_and_compliance_check_of_HVAC_.pdf", "page": 2, "char_start": 0, "char_end": 1200, "section_title": "Linked Data & Semantic Web", "section_path": ["Introduction", "Linked Data & Semantic Web"], "scanned": false}}
{"id": "Efficient_management_and_compliance_check_of_HVAC__p2_4", "text": " live access is available.\nThe Industry Foundation Classes (IFC) is currently the standard format of building information and has been\napplied to exchange the needed information among stakeholders, mainly in a ﬁle-based or document-centric ap-\nproach. Extending the IFC schema with new domain-speciﬁc knowledge is difﬁcult due to its monolithic structure\nand complexity [43]. In addition, the schema does not describe cross-domain information such as occupancy data,\nmeteorological data, data from building automation and control systems (BACS), nor information that links the\ndifferent domain information to each other [21].\n1.2. Linked Data & Semantic Web\nThe World Wide Web Consortium (W3C), with its participants consisting of academic and industrial partners,\nhas developed open data standards for software developers to support the shift from a “Web of Documents” to\na “Web of Data” [23]. They have developed the Semantic Web Technologies consisting of Resource Description\nFramework (RDF), RDF Schema (RDFS), Web Ontology Language (OWL), SPARQL Protocol and RDF Query\nLanguage (SPARQL), as well as Shapes Constraint Language (SHACL). It is a framework that enables sharing,\naccessing, conformi", "metadata": {"doc_id": "Efficient_management_and_compliance_check_of_HVAC_", "source_path": "data\\pdfs\\Efficient_management_and_compliance_check_of_HVAC_.pdf", "page": 2, "char_start": 1000, "char_end": 2200, "section_title": "Linked Data & Semantic Web", "section_path": ["Introduction", "Linked Data & Semantic Web"], "scanned": false}}
{"id": "Efficient_management_and_compliance_check_of_HVAC__p2_5", "text": " Schema (RDFS), Web Ontology Language (OWL), SPARQL Protocol and RDF Query\nLanguage (SPARQL), as well as Shapes Constraint Language (SHACL). It is a framework that enables sharing,\naccessing, conforming, and linking data over the web in a machine-interpretable format [56,57].\nContrary to the IFC schema, which has well-known limitations such as limited expression range, difﬁculty par-\ntitioning of information, and multiple ways of describing the same information, the W3C suggests more modu-\nlar, polylithic, and simple data formats, also called ontologies, that can be interlinked and easily extended over\ntime [29,40,43]. Figure 1 shows the concept of interconnected ontologies, and it can be seen that the domain-\nspeciﬁc ontologies can be separated as smaller graphs and linked with other ontologies. An ontology does not need\nto cover an entire domain, such as HVAC systems. It can also cover minor subdomains for HVAC, such as repre-\nsenting different component types and their properties alone or the connectivity of HVAC components and their\nFig. 1. Interlinked domain-speciﬁc ontologies.", "metadata": {"doc_id": "Efficient_management_and_compliance_check_of_HVAC_", "source_path": "data\\pdfs\\Efficient_management_and_compliance_check_of_HVAC_.pdf", "page": 2, "char_start": 2000, "char_end": 3099, "section_title": "Linked Data & Semantic Web", "section_path": ["Introduction", "Linked Data & Semantic Web"], "scanned": false}}
{"id": "Efficient_management_and_compliance_check_of_HVAC__p2_6", "text": "one or the connectivity of HVAC components and their\nFig. 1. Interlinked domain-speciﬁc ontologies.", "metadata": {"doc_id": "Efficient_management_and_compliance_check_of_HVAC_", "source_path": "data\\pdfs\\Efficient_management_and_compliance_check_of_HVAC_.pdf", "page": 2, "char_start": 3000, "char_end": 3099, "section_title": "Linked Data & Semantic Web", "section_path": ["Introduction", "Linked Data & Semantic Web"], "scanned": false}}
{"id": "Efficient_management_and_compliance_check_of_HVAC__p3_7", "text": "3\nrelations to systems and subsystems. Developing smaller ontologies that target one building domain will yield a\npractical and ﬂexible way of modelling knowledge when combined [21,58].\n1.3. Interlinking domain-speciﬁc knowledge\nIn this context, the World Wide Web Linked Building Data Community Group (W3C LBD CG) has deﬁned\nand shared a set of ontologies like Building Topology Ontology (BOT) [42], Flow Systems Ontology (FSO) [27],\nTUBES System Ontology (TUBES) [37], Property Set Deﬁnition Ontology (PROPS) [7], and Product Ontology\n(PRODUCT) [67] for the AEC industry. While FSO describes the energy and mass ﬂow relationships between\nsystems and their components and their compositions [27,37], it lacks system components’ capacity- and size-\nrelated properties. A key aspect here is whether such properties need to be added directly to the FSO ontology or\ncan be kept separate, e.g. in its own module or ontology. In Section 3 we argue that the best approach to create an\nontology, called the Flow Properties Ontology (FPO), that includes only those properties and aligns it with other\nexisting ontologies in the LBD CG context, in particular with the FSO ontology that focuses on HVAC domain.", "metadata": {"doc_id": "Efficient_management_and_compliance_check_of_HVAC_", "source_path": "data\\pdfs\\Efficient_management_and_compliance_check_of_HVAC_.pdf", "page": 3, "char_start": 0, "char_end": 1200, "section_title": "Outline", "section_path": ["Introduction", "Outline"], "scanned": false}}
{"id": "Efficient_management_and_compliance_check_of_HVAC__p3_8", "text": "Flow Properties Ontology (FPO), that includes only those properties and aligns it with other\nexisting ontologies in the LBD CG context, in particular with the FSO ontology that focuses on HVAC domain.\n1.4. Conforming domain-speciﬁc knowledge\nDespite their strengths in representing domain-speciﬁc knowledge, ontologies cannot solve the problem that\nmany BIM models are poorly modelled and lack building elements or metadata. Currently, poor data quality in\nbuilding models contributes to faulty design decisions and downfalls in the information stream. Due to the increasing\nlevel of information, it is challenging to create sufﬁcient BIM models [24,40,46,60]. Architects and owners can\nspend hundreds of hours manually assessing conformity [26]. Due to the time-consuming process and the need\nfor high-performing BIM models, many research publications have addressed conformance checking. The most\nprominent publications on conformance checking of BIM models cover various frameworks, tools, rule languages,\nrule models, and rule engines [5,8,12,13,19,22,30,36,49,53,54]. As their data models rely on IFC or their rule\nmodels lack semantic expressivity, they all have limitations and cause poor quer", "metadata": {"doc_id": "Efficient_management_and_compliance_check_of_HVAC_", "source_path": "data\\pdfs\\Efficient_management_and_compliance_check_of_HVAC_.pdf", "page": 3, "char_start": 1000, "char_end": 2200, "section_title": "Outline", "section_path": ["Introduction", "Outline"], "scanned": false}}
{"id": "Efficient_management_and_compliance_check_of_HVAC__p3_9", "text": "nguages,\nrule models, and rule engines [5,8,12,13,19,22,30,36,49,53,54]. As their data models rely on IFC or their rule\nmodels lack semantic expressivity, they all have limitations and cause poor query performance [28,51]. Soman et\nal. [55], Stolk and McGlinn [56], and Oraskari et al. [35] describe a promising approach to surpass the limitations\nof IFC and improve conformance checking. They use a Semantic Web approach with a data model written in OWL\nand a rule model written in SHACL to verify constraint violations. Soman et al. [55] applied the method to the\nconstruction ﬁeld, while Stolk and McGlinn [56] applied the method to the geospatial ﬁeld, and Oraskari et al. [35]\nto the energy simulation ﬁeld. However, these publications do not describe how to validate an HVAC model with\nSHACL, nor do they apply the framework to a real-world large building project. In addition, we intend to develop a\nrule model written in SHACL for validating HVAC-related constraints.\n1.5. Contribution\nConsidering the above, several innovations are needed. In fact, our research includes ﬁve contributions. Firstly,\nour research aims to extend FSO to support an alignment with the proposed FPO ontology. Seco", "metadata": {"doc_id": "Efficient_management_and_compliance_check_of_HVAC_", "source_path": "data\\pdfs\\Efficient_management_and_compliance_check_of_HVAC_.pdf", "page": 3, "char_start": 2000, "char_end": 3200, "section_title": "Outline", "section_path": ["Introduction", "Outline"], "scanned": false}}
{"id": "Efficient_management_and_compliance_check_of_HVAC__p3_10", "text": "ering the above, several innovations are needed. In fact, our research includes ﬁve contributions. Firstly,\nour research aims to extend FSO to support an alignment with the proposed FPO ontology. Secondly, we propose\nthe FPO ontology itself to represent HVAC components’ capacity and size-related properties. Thirdly, we propose\na set of rules to validate HVAC-related constraints. Fourthly, our work produces a demonstration environment for a\nreal-world building project, showcasing how to conform a HVAC model using Semantic Web technologies. Lastly,\nthe demonstration environment will showcase how FPO and the HVAC rule model can support the description and\nvalidation of hydraulics in HVAC components and the capacity of HVAC components.\n1.6. Outline\nThe remainder of this article is structured as follows. Section 2 describes previous work on knowledge represen-\ntation and rule checking related to buildings and systems. The presented work is limited to OWL-based data models\nand SHACL-based rule models. The development of FPO and extension of FSO are explained in Section 3. Section 4\noutlines our framework and rules for validating HVAC-related constraints. We utilize a real-world building ", "metadata": {"doc_id": "Efficient_management_and_compliance_check_of_HVAC_", "source_path": "data\\pdfs\\Efficient_management_and_compliance_check_of_HVAC_.pdf", "page": 3, "char_start": 3000, "char_end": 4200, "section_title": "Outline", "section_path": ["Introduction", "Outline"], "scanned": false}}
{"id": "Efficient_management_and_compliance_check_of_HVAC__p3_11", "text": "le models. The development of FPO and extension of FSO are explained in Section 3. Section 4\noutlines our framework and rules for validating HVAC-related constraints. We utilize a real-world building model in\nSection 5 to illustrate how FPO can represent capacity- and size-related properties and be used to design an HVAC", "metadata": {"doc_id": "Efficient_management_and_compliance_check_of_HVAC_", "source_path": "data\\pdfs\\Efficient_management_and_compliance_check_of_HVAC_.pdf", "page": 3, "char_start": 4000, "char_end": 4322, "section_title": "Outline", "section_path": ["Introduction", "Outline"], "scanned": false}}
{"id": "Efficient_management_and_compliance_check_of_HVAC__p4_12", "text": "4\nA. Kücükavci et al. / Efﬁcient management and compliance check of HVAC information\nTable 1\nUsed preﬁxes and namespaces\nPreﬁx\nNamespaces\nfpo\nhttps://w3id.org/fpo#\nfso\nhttps://w3id.org/fso#\nfsosh\nhttps://w3id.org/fsosh#\nbot\nhttps://w3id.org/bot#\ns4bldg\nhttps://saref.etsi.org/saref4bldg#\ns4syst\nhttps://saref.etsi.org/saref4syst#\nbrick\nhttps://brickschema.org/schema/1.1/Brick#\nseas\nhttps://w3id.org/seas#\nrdfs\nhttp://www.w3.org/2000/01/rdf-schema#\nrdf\nhttp://www.w3.org/1999/02/22-rdf-syntax-ns#\nex\nhttps://example.com/ex#\ninst\nhttps://example.com/inst#\nowl\nhttps://www.w3.org/2002/07/owl#\ndevice. Additionally, the real-world building model will be validated against our rule model in Section 5 where a\nprocess of four steps and a web application are introduced and applied to generate validation and capacity design\nresults and display the results within a web interface. The validation results pinpoint the components or properties\nin the data model that violate our rule model, while the capacity results show the ﬂow rate and pressure of each\nﬂow-moving device that is represented in the data model.The validation and capacity design results are discussed\nin Section 6, and conclusions are pres", "metadata": {"doc_id": "Efficient_management_and_compliance_check_of_HVAC_", "source_path": "data\\pdfs\\Efficient_management_and_compliance_check_of_HVAC_.pdf", "page": 4, "char_start": 0, "char_end": 1200, "section_title": "System representation in a Semantic Web context", "section_path": ["Background", "System representation in a Semantic Web context"], "scanned": false}}
{"id": "Efficient_management_and_compliance_check_of_HVAC__p4_13", "text": "y results show the ﬂow rate and pressure of each\nﬂow-moving device that is represented in the data model.The validation and capacity design results are discussed\nin Section 6, and conclusions are presented in Section 7. Table 1 shows the namespaces and preﬁxes used in this\narticle.\n2. Background\n2.1. Scope of the HVAC domain\nThe HVAC engineer is responsible for designing a building’s HVAC system. The purpose of an HVAC system\nis to provide building occupants with acceptable thermal comfort and indoor air quality. HVAC engineers must go\nthrough a series of steps to design an HVAC system, such as deﬁning the distribution strategy for HVAC, deﬁning\nthe control strategy, calculating HVAC demand by zones, and determining the capacity and size of HVAC systems\nand their components. To determine whether an HVAC system is designed sufﬁciently, its cooling, ventilation and\nheating effects are compared with the building’s cooling, ventilation, and heating demands. The HVAC system\nis considered sufﬁcient when the capacity exceeds the building’s demand. The HVAC engineer must design each\nHVAC component’s capacity individually since an HVAC system’s capacity equals the sum of its components. The", "metadata": {"doc_id": "Efficient_management_and_compliance_check_of_HVAC_", "source_path": "data\\pdfs\\Efficient_management_and_compliance_check_of_HVAC_.pdf", "page": 4, "char_start": 1000, "char_end": 2200, "section_title": "System representation in a Semantic Web context", "section_path": ["Background", "System representation in a Semantic Web context"], "scanned": false}}
{"id": "Efficient_management_and_compliance_check_of_HVAC__p4_14", "text": "fﬁcient when the capacity exceeds the building’s demand. The HVAC engineer must design each\nHVAC component’s capacity individually since an HVAC system’s capacity equals the sum of its components. The\nHVAC component’s size is then determined based on its capacity. The HVAC engineer can choose a product from a\nmanufacturer once the capacity and size have been deﬁned. By the time all HVAC components have been designed,\nthe HVAC engineer has completed the HVAC design process.\nSince our research project seeks to represent and validate an HVAC system’s and HVAC component’s capacity\nand size-related properties in a Semantic Web context, Section 2.2 provides an overview of what research has been\nachieved in this ﬁeld and what is missing.\n2.2. System representation in a Semantic Web context\nA number of ontologies have been proposed to handle data within the AEC industry since the early 2000s. The\nﬁrst signiﬁcant contribution towards moving BIM data into the Semantic Web is the ifcOWL ontology. IfcOWL\nis an OWL representation of the IFC schema [6,59], and it is available at the buildingSMART website1 as just\n1https://technical.buildingsmart.org/standards/ifc/ifc-schema-speciﬁcations", "metadata": {"doc_id": "Efficient_management_and_compliance_check_of_HVAC_", "source_path": "data\\pdfs\\Efficient_management_and_compliance_check_of_HVAC_.pdf", "page": 4, "char_start": 2000, "char_end": 3192, "section_title": "System representation in a Semantic Web context", "section_path": ["Background", "System representation in a Semantic Web context"], "scanned": false}}
{"id": "Efficient_management_and_compliance_check_of_HVAC__p4_15", "text": " IfcOWL\nis an OWL representation of the IFC schema [6,59], and it is available at the buildingSMART website1 as just\n1https://technical.buildingsmart.org/standards/ifc/ifc-schema-speciﬁcations", "metadata": {"doc_id": "Efficient_management_and_compliance_check_of_HVAC_", "source_path": "data\\pdfs\\Efficient_management_and_compliance_check_of_HVAC_.pdf", "page": 4, "char_start": 3000, "char_end": 3192, "section_title": "System representation in a Semantic Web context", "section_path": ["Background", "System representation in a Semantic Web context"], "scanned": false}}
{"id": "Efficient_management_and_compliance_check_of_HVAC__p5_16", "text": "5\nanother serialisation of the IFC schema, next to eXtensible Markup Language Schema Deﬁnition (XSD) and EX-\nPRESS [25]. It is recognized that IFC is not the easiest method to model a building or infrastructure due to the\ncomplex relationships between building elements (mostly n-ary relationships), which makes extension difﬁcult.\nHence, this has hampered its direct use among AEC stakeholders [1,57]. Moreover, it covers a wide range of do-\nmains, making it monolithic, rigid, and hard to extend [41]. The direct translation from the IFC schema to an OWL\nontology does not change these inherent features of IFC, and so also, the OWL ontology has the same limitations\n(complexity, limited extensibility, size). However, the comprehensive nature of IFC also serves as its strength. It\noffers an all-encompassing framework for building information modelling, catering to a diverse range of building\naspects. This extensive scope makes IFC a valuable resource in contexts where a detailed representation of various\nbuilding domains is required. In response to the need for a more simpliﬁed and manageable approach, particularly\nin applications where such extensive detail is not necessary, several onto", "metadata": {"doc_id": "Efficient_management_and_compliance_check_of_HVAC_", "source_path": "data\\pdfs\\Efficient_management_and_compliance_check_of_HVAC_.pdf", "page": 5, "char_start": 0, "char_end": 1200, "section_title": "System representation in a Semantic Web context", "section_path": ["Background", "System representation in a Semantic Web context"], "scanned": false}}
{"id": "Efficient_management_and_compliance_check_of_HVAC__p5_17", "text": "n of various\nbuilding domains is required. In response to the need for a more simpliﬁed and manageable approach, particularly\nin applications where such extensive detail is not necessary, several ontologies have been developed. These include\nthe BOT, Smart Applications REFerence (SAREF), FSO, and others. Each of these ontologies abstracts a subset\nof the information covered by IFC into simpler and more manageable formats. For example, BOT focuses speciﬁ-\ncally on spatial elements, while SAREF and FSO concentrate on aspects like smart appliances and building services\nrespectively. By extracting speciﬁc aspects from the broad spectrum covered by IFC in a simpliﬁed way, these on-\ntologies offers a lightweight and domain-driven approach to building information modelling, complementing the\ncomprehensive scope of IFC [42].\nThe next paragraphs present the ontologies that are relevant in the building service systems domain.\nBOT describes the relationship between building zones and elements [44]. A zone can be a building, a ﬂoor,\na space, or a group of spaces. The building can be connected to the ﬂoor level by asserting that an entity of\nbot:Building is related to an entity of bot:Storey wi", "metadata": {"doc_id": "Efficient_management_and_compliance_check_of_HVAC_", "source_path": "data\\pdfs\\Efficient_management_and_compliance_check_of_HVAC_.pdf", "page": 5, "char_start": 1000, "char_end": 2200, "section_title": "System representation in a Semantic Web context", "section_path": ["Background", "System representation in a Semantic Web context"], "scanned": false}}
{"id": "Efficient_management_and_compliance_check_of_HVAC__p5_18", "text": "]. A zone can be a building, a ﬂoor,\na space, or a group of spaces. The building can be connected to the ﬂoor level by asserting that an entity of\nbot:Building is related to an entity of bot:Storey with bot:hasStorey. The same method can be ap-\nplied between the storey and the space. Zones are related in BOT by nesting smaller zones in larger zones. BOT can\nbe used to describe the connections between zones in a building, but it cannot describe building systems.\nSEAS describes the relationships between physical systems [31]. There are three main modules in the ontology,\nnamely, The System Ontology, The Features Of Interest Ontology, and The Evaluation Ontology. The Features\nOf Interest Ontology allows us to describe features of interest and their properties. A car, as an example, can be\nconsidered a feature of interest with a property called speed. Properties are either evaluated directly or through a\nqualiﬁed evaluation in the Evaluation Ontology. In a direct evaluation, a value is assigned to the property. A qualiﬁed\nevaluation needs to outline three categories: type, the context of validity, and provenance data. The System Ontology\ndescribes the systems and the relationships betw", "metadata": {"doc_id": "Efficient_management_and_compliance_check_of_HVAC_", "source_path": "data\\pdfs\\Efficient_management_and_compliance_check_of_HVAC_.pdf", "page": 5, "char_start": 2000, "char_end": 3200, "section_title": "System representation in a Semantic Web context", "section_path": ["Background", "System representation in a Semantic Web context"], "scanned": false}}
{"id": "Efficient_management_and_compliance_check_of_HVAC__p5_19", "text": "igned to the property. A qualiﬁed\nevaluation needs to outline three categories: type, the context of validity, and provenance data. The System Ontology\ndescribes the systems and the relationships between them. There are three levels of connectivity: between systems,\nconnections, or connection points. The SEAS ontology focuses primarily on electrical systems but can also be used\nto represent higher-level building services systems [31]. Yet, it does not describe any building service components\nor their relationships to building service systems.\nBuilding service components are included in the Brick ontology [4] and the SAREF ontology [9] at different\nconceptual levels and scopes. The emergence of semantic modelling in building systems has been signiﬁcantly\ninﬂuenced by the collaboration and development of standards and frameworks like Brick, Project Haystack, and\nAmerican Society of Heating, Refrigerating and Air-Conditioning Engineers (ASHRAE) Standard 223P [3].\nThe Brick ontology describes sensor points and their relationships to physical, logical, and virtual assets in build-\nings. It consists of a core ontology to describe fundamental concepts and their relationships and a domain-", "metadata": {"doc_id": "Efficient_management_and_compliance_check_of_HVAC_", "source_path": "data\\pdfs\\Efficient_management_and_compliance_check_of_HVAC_.pdf", "page": 5, "char_start": 3000, "char_end": 4200, "section_title": "System representation in a Semantic Web context", "section_path": ["Background", "System representation in a Semantic Web context"], "scanned": false}}
{"id": "Efficient_management_and_compliance_check_of_HVAC__p5_20", "text": "bes sensor points and their relationships to physical, logical, and virtual assets in build-\nings. It consists of a core ontology to describe fundamental concepts and their relationships and a domain-speciﬁc\ntaxonomy. The ontology focuses on sensor points and their relations to location, equipment, and resource [4]. Relat-\ning a sensor point to a location expresses in which area of the building the sensor point is located. It can be located\nin a room, on a ﬂoor, in a duct. Relating a sensor point to speciﬁc equipment expresses how the sensor point controls\nthe system or component. For example, take a room temperature sensor positioned in a room. The room temperature\nsensor regulates how much air an Air Handling Unit (AHU) must supply to the room. Lastly, the resource is the\nmedium being measured and regulated by the sensor point and equipment. For example, the medium of an AHU is\nthe air that is being supplied to a room.\nASHRAE Standard 223P, developed in collaboration with Project Haystack and the Brick initiative, aims to\nstandardize semantic modeling in building systems. This standard represents a signiﬁcant step towards unifying\nthe approach to building data semantics, building", "metadata": {"doc_id": "Efficient_management_and_compliance_check_of_HVAC_", "source_path": "data\\pdfs\\Efficient_management_and_compliance_check_of_HVAC_.pdf", "page": 5, "char_start": 4000, "char_end": 5200, "section_title": "System representation in a Semantic Web context", "section_path": ["Background", "System representation in a Semantic Web context"], "scanned": false}}
{"id": "Efficient_management_and_compliance_check_of_HVAC__p5_21", "text": "stack and the Brick initiative, aims to\nstandardize semantic modeling in building systems. This standard represents a signiﬁcant step towards unifying\nthe approach to building data semantics, building upon the foundational work of Haystack tagging and Brick data\nmodelling concepts [3].", "metadata": {"doc_id": "Efficient_management_and_compliance_check_of_HVAC_", "source_path": "data\\pdfs\\Efficient_management_and_compliance_check_of_HVAC_.pdf", "page": 5, "char_start": 5000, "char_end": 5286, "section_title": "System representation in a Semantic Web context", "section_path": ["Background", "System representation in a Semantic Web context"], "scanned": false}}
{"id": "Efficient_management_and_compliance_check_of_HVAC__p6_22", "text": "6\nA. Kücükavci et al. / Efﬁcient management and compliance check of HVAC information\nThe SAREF Smart Appliances Reference ontology is a reference ontology for smart appliances (devices) [9].\nIt aims to bring meaningful interactions between Internet of Things (IoT) devices in various domains. There are\ncurrently 13 extensions to the core ontology. SAREF4SYST is based on the concepts of seas:SystemOntology\nto describe higher-level building service systems. SAREF4BLDG is based on the IFC taxonomy and describes\nbuilding service devices. Even if it is similar to IFC and BOT, these structures are not fully the same [39]. Together,\nSAREF4SYST and SAREF4BLDG can represent building systems and their connectivity with IoT devices. Like\nBrick, the SAREF ontology represents medium-level building system devices such as a fan or pump. Furthermore,\nSAREF4BLDG represents capacity-related building service devices to some extent. Those parameters are based on\nthe IFC taxonomy.\nHowever, while Brick, SAREF, and the initiatives leading to ASHRAE Standard 223P have signiﬁcantly advanced\nsemantic modeling, particularly focused on the operational phase of the building life cycle, they present limitations\n", "metadata": {"doc_id": "Efficient_management_and_compliance_check_of_HVAC_", "source_path": "data\\pdfs\\Efficient_management_and_compliance_check_of_HVAC_.pdf", "page": 6, "char_start": 0, "char_end": 1200, "section_title": "Rule languages in a Semantic Web context", "section_path": ["Background", "Rule languages in a Semantic Web context"], "scanned": false}}
{"id": "Efficient_management_and_compliance_check_of_HVAC__p6_23", "text": "F, and the initiatives leading to ASHRAE Standard 223P have signiﬁcantly advanced\nsemantic modeling, particularly focused on the operational phase of the building life cycle, they present limitations\nin certain areas. Speciﬁcally, these frameworks and standards primarily revolve around sensor points, leading to a\nnotable exclusion of passive components, such as pipes and ducts, or their properties.\nAn OWL ontology that is similar to the SAREF4BLDG ontology, but does not include any building topology\nto avoid semantically overlapping ontologies, is the Mechanical, Electrical and Plumbing (MEP) ontology.2 This\nontology is structured as a very simple hierarchical taxonomy for devices and is directly created based on the\nDistributionElement subtree in the IFC schema. It needs to be combined with the BOT ontology to be of use and\nworks well to classify distribution elements such as air terminals.\nFSO focuses on the design and operational phase of the building life cycle [27]. It describes the mass ﬂow and\nenergy relationships between systems and components and the composition of such systems [27]. FSO gives the\nability to connect both passive and active components to systems and subsyst", "metadata": {"doc_id": "Efficient_management_and_compliance_check_of_HVAC_", "source_path": "data\\pdfs\\Efficient_management_and_compliance_check_of_HVAC_.pdf", "page": 6, "char_start": 1000, "char_end": 2200, "section_title": "Rule languages in a Semantic Web context", "section_path": ["Background", "Rule languages in a Semantic Web context"], "scanned": false}}
{"id": "Efficient_management_and_compliance_check_of_HVAC__p6_24", "text": "he mass ﬂow and\nenergy relationships between systems and components and the composition of such systems [27]. FSO gives the\nability to connect both passive and active components to systems and subsystems. For example, a heating system\ncan include a supply and a return system as subsystems. A segment or ﬁtting can be related to a supply or return\nsystem. A component can also be connected to a supply and return system, such as a heat exchanger. A segment\ncan supply or return ﬂuid to another component based on what system it belongs to. Unlike Brick and SAREF\nontologies, FSO only represent higher-level components such as ﬂow-moving devices or ﬂow-controlling devices\n(also included in the MEP ontology). The taxonomy of building service devices for all four ontologies is based on\nthe IFC taxonomy. However, FSO does not represent both active and passive components’ size- and capacity-related\nproperties. Without that representation, HVAC engineers cannot design an HVAC system nor an HVAC component\nduring the design phase using FSO.\nFPO and an extended version of FSO are introduced in Section 3 to ﬁll this research gap and describe the size- and\ncapacity-related properties of both active a", "metadata": {"doc_id": "Efficient_management_and_compliance_check_of_HVAC_", "source_path": "data\\pdfs\\Efficient_management_and_compliance_check_of_HVAC_.pdf", "page": 6, "char_start": 2000, "char_end": 3200, "section_title": "Rule languages in a Semantic Web context", "section_path": ["Background", "Rule languages in a Semantic Web context"], "scanned": false}}
{"id": "Efficient_management_and_compliance_check_of_HVAC__p6_25", "text": "onent\nduring the design phase using FSO.\nFPO and an extended version of FSO are introduced in Section 3 to ﬁll this research gap and describe the size- and\ncapacity-related properties of both active and passive components within the design phase. Ontologies are mainly\nused to represent domain-speciﬁc knowledge. To check whether a BIM model lacks building elements or metadata,\nwe need a rule language. Section 2.3 describes which rule languages exist and what research has achieved in this\narea in a Semantic Web context.\nThis overview of existing ontologies in the AEC industry, including ifcOWL, BOT, SEAS, Brick, SAREF, and\nothers, aims to highlight both their strengths and limitations in relation to HVAC system representation. These\nontologies lay the groundwork for our further research, where we introduce FSO and FPO. Building upon this\nexisting knowledge base, FSO and FPO take a step further to address speciﬁc needs in HVAC system design.\nBy focusing on capacity- and size-related properties for both active and passive components, FSO and FPO ﬁll\ncritical gaps left by these ontologies. This contribution is crucial for enabling more detailed and accurate design and\ncompliance checkin", "metadata": {"doc_id": "Efficient_management_and_compliance_check_of_HVAC_", "source_path": "data\\pdfs\\Efficient_management_and_compliance_check_of_HVAC_.pdf", "page": 6, "char_start": 3000, "char_end": 4200, "section_title": "Rule languages in a Semantic Web context", "section_path": ["Background", "Rule languages in a Semantic Web context"], "scanned": false}}
{"id": "Efficient_management_and_compliance_check_of_HVAC__p6_26", "text": "rties for both active and passive components, FSO and FPO ﬁll\ncritical gaps left by these ontologies. This contribution is crucial for enabling more detailed and accurate design and\ncompliance checking of HVAC systems in the building design phase.\n2.3. Rule languages in a Semantic Web context\nSeveral prominent rule languages have been developed by the W3C. In 2004, the W3C introduced the Semantic\nWeb Rule Language (SWRL) as a member submission.3 SWRL is a combination of the OWL Description Language\n(DL) and OWL Lite sublanguages of OWL with the Unary/Binary Datalog RuleML sublanguages of the Rule\nMarkup Language. OWL knowledge bases are integrated with Horn-like rules in the rule language. The rules are\n2https://pi.pauwel.be/voc/distributionelement\n3https://www.w3.org/2021/Process-20211102/", "metadata": {"doc_id": "Efficient_management_and_compliance_check_of_HVAC_", "source_path": "data\\pdfs\\Efficient_management_and_compliance_check_of_HVAC_.pdf", "page": 6, "char_start": 4000, "char_end": 4801, "section_title": "Rule languages in a Semantic Web context", "section_path": ["Background", "Rule languages in a Semantic Web context"], "scanned": false}}
{"id": "Efficient_management_and_compliance_check_of_HVAC__p7_27", "text": "7\nexpressed in terms of OWL concepts, such as classes, properties and individuals. Because OWL ontologies are\nlimited in their ability to express complex logical reasoning, SWRL allows users to create custom rules and apply\nthem to OWL ontologies [32,61].\nSimilar to SWRL, the Rule Interchange Format (RIF) introduced in 2005 by W3C allows rules to be expressed\nin XML syntax. In order to enhance interoperability between rule languages, RIF was designed to be the standard\nexchange format for rules on the Semantic Web. As of today, RIF consists of 12 parts, including RIF-core, which is\nthe core of all RIF dialects [32,64].\nNotation3 (N3), is an assertion and logic language that supports expressing RDF-based rules. It was introduced\nin 2011 by W3C as a team submission to extend RDF by adding formulae, variables, logical implication, and\nfunctional predicates, as well as to provide an alternative syntax to the XML syntax that SWRL and RIF use. By\nusing shortcuts and syntactic sugar, it is able to simplify statements in the form of triples [62].\nThe SPARQL Inferencing Notation (SPIN) was introduced by W3C in 2011 as a member submission and has be-\ncome a de facto industry standard for des", "metadata": {"doc_id": "Efficient_management_and_compliance_check_of_HVAC_", "source_path": "data\\pdfs\\Efficient_management_and_compliance_check_of_HVAC_.pdf", "page": 7, "char_start": 0, "char_end": 1200, "section_title": "The research gap in case studies", "section_path": ["Background", "Rule languages in a Semantic Web context", "The research gap in case studies"], "scanned": false}}
{"id": "Efficient_management_and_compliance_check_of_HVAC__p7_28", "text": "le to simplify statements in the form of triples [62].\nThe SPARQL Inferencing Notation (SPIN) was introduced by W3C in 2011 as a member submission and has be-\ncome a de facto industry standard for describing SPARQL rules and constraints. The key feature of SPIN, compared\nto SWRL, RIF, and N3, is the ability to specify constraints using SPARQL queries. In this way, property values can\nbe calculated based on other properties, or a set of rules can be isolated for execution under certain conditions. It is\nalso possible to use SPIN to check the validity of constraints based on the assumption of a closed world [63].\nSHACL is the successor to SPIN and was published as a W3C Recommendation in 2017 [20,65]. A higher\nstatus has been granted to SHACL by W3C in comparison to SWRL, RIF, N3 and SPIN. Distinguished from other\nSemantic Web technologies, SHACL is based on the Closed World Assumption (CWA). This approach means that\nin data validation, SHACL considers anything not explicitly stated in the dataset as false or non-existent, focusing on\nvalidating data against speciﬁcally deﬁned constraints within this “closed world.” This feature of SHACL makes it\nparticularly effective in scenarios w", "metadata": {"doc_id": "Efficient_management_and_compliance_check_of_HVAC_", "source_path": "data\\pdfs\\Efficient_management_and_compliance_check_of_HVAC_.pdf", "page": 7, "char_start": 1000, "char_end": 2200, "section_title": "The research gap in case studies", "section_path": ["Background", "Rule languages in a Semantic Web context", "The research gap in case studies"], "scanned": false}}
{"id": "Efficient_management_and_compliance_check_of_HVAC__p7_29", "text": "he dataset as false or non-existent, focusing on\nvalidating data against speciﬁcally deﬁned constraints within this “closed world.” This feature of SHACL makes it\nparticularly effective in scenarios where explicit and complete data validation is essential [66]. As a result, SHACL\nhas become the web standard today for validating RDF graphs. SHACL is heavily inspired by SPIN, but it offers far\nmore ﬂexibility in deﬁning target constraints. SPIN is limited to classes, while SHACL can be applied to classes or\nsets of nodes by various target mechanisms, including customized targets. Furthermore, SHACL advanced features\nallow validation of more complex constraint types, such as sub-graph pattern- and conditional validation. SHACL\ncontains two major components:\nData graph: A data model containing domain-speciﬁc knowledge.\nShape graph: A rule model consisting of user-deﬁned constraints. User-deﬁned shapes can be node shapes or\nproperty shapes. Node shapes specify constraints on target nodes, while property shapes specify constraints\non target properties and their values.\nBy separating the data model and rule model, SHACL follows the Business Rule Management Systems (BRMS)\nprinciple of deco", "metadata": {"doc_id": "Efficient_management_and_compliance_check_of_HVAC_", "source_path": "data\\pdfs\\Efficient_management_and_compliance_check_of_HVAC_.pdf", "page": 7, "char_start": 2000, "char_end": 3200, "section_title": "The research gap in case studies", "section_path": ["Background", "Rule languages in a Semantic Web context", "The research gap in case studies"], "scanned": false}}
{"id": "Efficient_management_and_compliance_check_of_HVAC__p7_30", "text": "hile property shapes specify constraints\non target properties and their values.\nBy separating the data model and rule model, SHACL follows the Business Rule Management Systems (BRMS)\nprinciple of decomposing knowledge into logic and data, enabling them to be independently manipulated [55]. In\naddition, SHACL outputs an RDF graph with validation results, which describes whether a data model passed or\nfailed a given rule set.\nThe following section highlights the research gap based on an overview of recent research on applying SHACL\nto perform conformance checking within the AEC industry.\n2.3.1. The research gap in case studies\nStolk and McGlinn [56] demonstrated how ifcOWL can be validated using SHACL. The authors showed how\nifc:lengthValue_IfcQuantityLength can be restricted to only have values of type ifc:IfcLength-\nMeasure and how cardinality constraints can be used to restrict ifc:IfcDoorPanel properties.\nHagedorn and König [20] developed an approach for compliance checking linked building models. The proposed\nmethod implements the four steps mentioned by Eastman using Semantic Web technologies. Using the IFC2RDF\nconverter, the authors converted an IFC schema into ifcOWL. Their r", "metadata": {"doc_id": "Efficient_management_and_compliance_check_of_HVAC_", "source_path": "data\\pdfs\\Efficient_management_and_compliance_check_of_HVAC_.pdf", "page": 7, "char_start": 3000, "char_end": 4200, "section_title": "The research gap in case studies", "section_path": ["Background", "Rule languages in a Semantic Web context", "The research gap in case studies"], "scanned": false}}
{"id": "Efficient_management_and_compliance_check_of_HVAC__p7_31", "text": "ilding models. The proposed\nmethod implements the four steps mentioned by Eastman using Semantic Web technologies. Using the IFC2RDF\nconverter, the authors converted an IFC schema into ifcOWL. Their rule model involved a set of rules to validate the\npath between an identiﬁer of a link and the original identiﬁer. In order to validate their data model against the rule\nmodel and receive a validation report, they used the W3C SHACL Test Suite.\nTo deﬁne and check complex and dynamic scheduling constraints in construction, Soman et al. [55] developed\na linked-data-based constraint-checking approach utilizing Semantic Web technologies. The approach was imple-\nmented through a web application that validated construction scheduling violations using different types of con-\nstraints. The pySHACL library was used to deﬁne and validate SHACL shapes, and the RDFlib library was used to", "metadata": {"doc_id": "Efficient_management_and_compliance_check_of_HVAC_", "source_path": "data\\pdfs\\Efficient_management_and_compliance_check_of_HVAC_.pdf", "page": 7, "char_start": 4000, "char_end": 4883, "section_title": "The research gap in case studies", "section_path": ["Background", "Rule languages in a Semantic Web context", "The research gap in case studies"], "scanned": false}}
{"id": "Efficient_management_and_compliance_check_of_HVAC__p8_32", "text": "8\nA. Kücükavci et al. / Efﬁcient management and compliance check of HVAC information\ndesign and store a RDF graph. They used IfcOWL and LinkOnt to capture the model information of a real-building\nmodel.\nOraskari et al. [35] deﬁned rules within the energy simulation ﬁeld for validating windows of speciﬁc sizes,\nchecksums of properties, and alignments of BOT classes and properties. They validated two data models against\neach other in order to align BOT classes and properties with ifcOWL. The IFC schema of a conceptual building\nmodel was converted to ifcOWL and BOT using the IFCtoLBD and IFC2BOT converters. The rule modelling,\nvalidation and reporting were performed using the TopBraid SHACL Application Programming Interface (API).\nWhile previous studies have utilized SHACL in various domains, none have speciﬁcally focused on HVAC sys-\ntems in BIM models. This study introduces a SHACL-based rule model tailored for the HVAC domain, utilizing\nlightweight ontologies like FSO and the newly proposed FPO to deﬁne HVAC systems and components within a\ndata graph. This targeted approach not only meets the unique design requirements of HVAC systems but also en-\nsures the integrity and reliabilit", "metadata": {"doc_id": "Efficient_management_and_compliance_check_of_HVAC_", "source_path": "data\\pdfs\\Efficient_management_and_compliance_check_of_HVAC_.pdf", "page": 8, "char_start": 0, "char_end": 1200, "section_title": "Flow properties ontology", "section_path": ["Flow properties ontology"], "scanned": false}}
{"id": "Efficient_management_and_compliance_check_of_HVAC__p8_33", "text": "posed FPO to deﬁne HVAC systems and components within a\ndata graph. This targeted approach not only meets the unique design requirements of HVAC systems but also en-\nsures the integrity and reliability of HVAC data in BIM models. Crucially, this study contributes to bridging the\ninformation gap in HVAC information management by developing a SHACL-based HVAC rule model. Such an\nadvancement is key for enhancing HVAC data integrity in BIM environments, thereby addressing a critical need in\nthe AEC domain.\n3. Flow properties ontology\nFPO is developed as an extension to FSO [27] to represent FSO component’s capacity and size-related properties.\nThe decision to develop FPO as an extension to FSO instead of integrating its concepts and relationships directly\ninto FSO is driven by the desire to maintain simplicity and ease of use in the core ontology. By keeping FSO\nminimalistic and general, it remains accessible and adaptable. FPO adds the necessary depth and detail for capacity\nand size aspects in certain HVAC subdomains without complicating the core system (FSO). This approach ensures\nthat FSO and FPO can evolve and adapt over time with ease, are straightforward to maintain and update a", "metadata": {"doc_id": "Efficient_management_and_compliance_check_of_HVAC_", "source_path": "data\\pdfs\\Efficient_management_and_compliance_check_of_HVAC_.pdf", "page": 8, "char_start": 1000, "char_end": 2200, "section_title": "Flow properties ontology", "section_path": ["Flow properties ontology"], "scanned": false}}
{"id": "Efficient_management_and_compliance_check_of_HVAC__p8_34", "text": "cts in certain HVAC subdomains without complicating the core system (FSO). This approach ensures\nthat FSO and FPO can evolve and adapt over time with ease, are straightforward to maintain and update and remain\nuser-friendly for all levels of expertise. This design philosophy mirrors that of the SAREF ontology [9], which\nemploys a core ontology for fundamental concepts, expandable through speciﬁc modules for different areas.\nFPO contains 50 classes, 50 object properties and 6 data properties and has a Description Logic expressivity\nof ALRF(D) [11]. An ontology development approach proposed by Fernandez et al. [14] and a practical design\nguide [10] was used to design and structure the classes, object properties and data properties in FPO. Classes, for\ninstance, should always begin with capital letters, also known as upper camel case, and should not contain spaces.\nIn contrast, object properties and data properties should always be written in lower camel case and with verb senses.\nIt is necessary to know the HVAC component type to describe its properties. A property of one HVAC component\nmay differ from another, and the data type or unit of one property may vary from another property.", "metadata": {"doc_id": "Efficient_management_and_compliance_check_of_HVAC_", "source_path": "data\\pdfs\\Efficient_management_and_compliance_check_of_HVAC_.pdf", "page": 8, "char_start": 2000, "char_end": 3200, "section_title": "Flow properties ontology", "section_path": ["Flow properties ontology"], "scanned": false}}
{"id": "Efficient_management_and_compliance_check_of_HVAC__p8_35", "text": "ecessary to know the HVAC component type to describe its properties. A property of one HVAC component\nmay differ from another, and the data type or unit of one property may vary from another property. A pump has\ndifferent properties than a fan, and the ﬂow rate can be expressed in liter per second or cubic meters per hour, which\nis different from a ventilation fan. An elbow can differ in properties from a tee by having an angle, even if both are\nﬁttings. Moreover, a tee has three ﬂow ports, and an elbow has two ﬂow ports. Conceptually, Fig. 2 illustrates how\na component can have a property and the property a value. As there are two steps between the component (Type /\nObject) and the value, this property modelling approach is a Level 2 (L2) property modelling approach, as deﬁned\nby Bonduel and Pauwels [38].\nIt is possible to represent buildings, spaces, and their relationships with systems and components using FSO and\nBOT. Adding FPO, the representation can identify whether a particular system or component is able to heat, cool,\nor ventilate a speciﬁc building or space.\nThe following subsections provide a more detailed description of FPO. To determine the scope of the ontology,\nSect", "metadata": {"doc_id": "Efficient_management_and_compliance_check_of_HVAC_", "source_path": "data\\pdfs\\Efficient_management_and_compliance_check_of_HVAC_.pdf", "page": 8, "char_start": 3000, "char_end": 4200, "section_title": "Flow properties ontology", "section_path": ["Flow properties ontology"], "scanned": false}}
{"id": "Efficient_management_and_compliance_check_of_HVAC__p8_36", "text": " system or component is able to heat, cool,\nor ventilate a speciﬁc building or space.\nThe following subsections provide a more detailed description of FPO. To determine the scope of the ontology,\nSection 3.1 lists a set of competency questions. In Section 3.2.2, FSO is extended with medium-level components\nFig. 2. Relationship between components, properties, and property values.", "metadata": {"doc_id": "Efficient_management_and_compliance_check_of_HVAC_", "source_path": "data\\pdfs\\Efficient_management_and_compliance_check_of_HVAC_.pdf", "page": 8, "char_start": 4000, "char_end": 4381, "section_title": "Flow properties ontology", "section_path": ["Flow properties ontology"], "scanned": false}}
{"id": "Efficient_management_and_compliance_check_of_HVAC__p9_37", "text": "9\nTable 2\nCompetency questions\nReference\nCompetency question\nCQ1\nWhat is the heating, cooling or ventilation capacity of a system?\nCQ2\nWhat is the heating, cooling or ventilation capacity of an HVAC component?\nCQ3\nWhat is the size of a given HVAC component?\nto represent ﬂuid movements between components. Section 3.3 reviews FPO classes and their properties. Finally,\nreasoning examples will be enabled in Section 3.4. Both the extension of FSO and the development of FPO are\nmade available on GitHub.4\n3.1. Competency questions\nCompetency questions in Table 2 are central to evaluating the practical applicability and relevance of the FPO in\nthe ﬁeld of HVAC engineering. These questions were formulated based on the typical needs encountered by HVAC\nengineers. Each question highlights a critical aspect of the HVAC design process:\n• System Capacity (CQ1): This question assesses FPO’s ability to represent the capacity of an HVAC system\nto meet a building’s demands for heating, cooling, and ventilation. It’s crucial to ensure that the system can\nadequately fulﬁll the environmental comfort needs of the building, contributing to its efﬁciency and suitability.\n• Component Capacity (CQ2): This f", "metadata": {"doc_id": "Efficient_management_and_compliance_check_of_HVAC_", "source_path": "data\\pdfs\\Efficient_management_and_compliance_check_of_HVAC_.pdf", "page": 9, "char_start": 0, "char_end": 1200, "section_title": "Connection between components", "section_path": ["Flow properties ontology", "Flow system ontology extended", "Connection between components"], "scanned": false}}
{"id": "Efficient_management_and_compliance_check_of_HVAC__p9_38", "text": "ilation. It’s crucial to ensure that the system can\nadequately fulﬁll the environmental comfort needs of the building, contributing to its efﬁciency and suitability.\n• Component Capacity (CQ2): This focuses on the capacities of individual HVAC components, such as pumps\nand fans, and their role in supporting the overall system. The capacity of each component is vital to ensure it\ncontributes effectively to the system’s ability to provide heating, cooling, and ventilation, thus maintaining the\nsystem’s overall performance and efﬁciency.\n• Component Size (CQ3): The size of HVAC components directly impacts their capacity and is integral to siz-\ning analysis. Accurate size information is essential for selecting appropriate components from manufacturers.\nEnsuring the chosen products match the designed dimensions conﬁrms their ﬁt in designated spaces.\nThe scope of the ontology, as outlined by these questions, is further validated in Section 5 through SPARQL\nqueries.\n3.2. Flow system ontology extended\n3.2.1. Connection between components\nFSO represents the energy and mass ﬂow relationships between systems, their components, and their composition.\nHowever, the current version of FSO cannot ", "metadata": {"doc_id": "Efficient_management_and_compliance_check_of_HVAC_", "source_path": "data\\pdfs\\Efficient_management_and_compliance_check_of_HVAC_.pdf", "page": 9, "char_start": 1000, "char_end": 2200, "section_title": "Connection between components", "section_path": ["Flow properties ontology", "Flow system ontology extended", "Connection between components"], "scanned": false}}
{"id": "Efficient_management_and_compliance_check_of_HVAC__p9_39", "text": "extended\n3.2.1. Connection between components\nFSO represents the energy and mass ﬂow relationships between systems, their components, and their composition.\nHowever, the current version of FSO cannot express the magnitude of these ﬂows. Real-world components contain\nﬂuid in motion, ﬂowing in and out through openings and passages, i.e. ports, which vary considerably in size,\nimpacting pressure drop and ﬂow rate, e.g. capacity. Without representing these size and capacity-related properties,\nFSO cannot fully capture the nuances of ﬂuid dynamics, crucial for accurate HVAC component and system design.\nAs a result, incorporating fso:Port into the ontology is essential to capture ﬂuid dynamics. By extending the\nFSO taxonomy to include fso:Port, we enable a detailed hierarchical relationship among systems, components,\nand ports, enhancing the accuracy and utility of the FSO model for HVAC engineers.\nThe concept of relating a fso:Port for multiple components is shown in Fig. 3. An fso:Segment can be\nlinked to an fso:Port with fso:hasPort. With fso:hasPort available, an fso:Fitting can be related\nto its ports. The direct relationship between the ports of both components is expressed using f", "metadata": {"doc_id": "Efficient_management_and_compliance_check_of_HVAC_", "source_path": "data\\pdfs\\Efficient_management_and_compliance_check_of_HVAC_.pdf", "page": 9, "char_start": 2000, "char_end": 3200, "section_title": "Connection between components", "section_path": ["Flow properties ontology", "Flow system ontology extended", "Connection between components"], "scanned": false}}
{"id": "Efficient_management_and_compliance_check_of_HVAC__p9_40", "text": "can be\nlinked to an fso:Port with fso:hasPort. With fso:hasPort available, an fso:Fitting can be related\nto its ports. The direct relationship between the ports of both components is expressed using fso:supplies-\nFluidTo.\nA relationship can be described among systems and components as shown in Fig. 4. The components share the\nsame fso:ConnectionPoint. Flows and Ports are not available in this example but could be modelled as well,\nafter the example in Fig. 3.\n4https://github.com/Semantic-Web-Tool/Orchestrator-Service/tree/main/public/Ontologies", "metadata": {"doc_id": "Efficient_management_and_compliance_check_of_HVAC_", "source_path": "data\\pdfs\\Efficient_management_and_compliance_check_of_HVAC_.pdf", "page": 9, "char_start": 3000, "char_end": 3550, "section_title": "Connection between components", "section_path": ["Flow properties ontology", "Flow system ontology extended", "Connection between components"], "scanned": false}}
{"id": "Efficient_management_and_compliance_check_of_HVAC__p10_41", "text": "10\nA. Kücükavci et al. / Efﬁcient management and compliance check of HVAC information\nFig. 3. A segment partitioned with ports connecting to a ﬁtting through its ports.\nFig. 4. Current and extended taxonomy of FSO with connection points.\nThe proposed extension to FSO makes it capable of representing components and interfaces in multiple ways,\nwhich adds some ﬂexibility. The deﬁnition of the mentioned classes and relationships in this section is deﬁned as\nfollows:\n• fso:Port is deﬁned as “An opening or passage that directs the ﬂow of a mass or energy”.\n• fso:hasPort is deﬁned as “The relation from a component to a port.”\n3.2.2. Extended component abstraction level\nCurrently, FSO represents eight high-level component types. For several reasons, we must subdivide the eight\nhigh-level component types into 19 medium-level components. For instance, the hydraulic sizing of a pump or a\nfan is different. The sizing of a pump includes the pressure drop from both supply system components and return\nsystem components, but the sizing of a fan only includes the pressure drop of either supply or return side. We have\nto deﬁne the types explicitly when performing hydraulic calculations.\nOften compo", "metadata": {"doc_id": "Efficient_management_and_compliance_check_of_HVAC_", "source_path": "data\\pdfs\\Efficient_management_and_compliance_check_of_HVAC_.pdf", "page": 10, "char_start": 0, "char_end": 1200, "section_title": "Property relationships", "section_path": ["Flow properties ontology", "Property relationships"], "scanned": false}}
{"id": "Efficient_management_and_compliance_check_of_HVAC__p10_42", "text": "rn\nsystem components, but the sizing of a fan only includes the pressure drop of either supply or return side. We have\nto deﬁne the types explicitly when performing hydraulic calculations.\nOften components lack the required properties to perform a hydraulic calculation. For example, if an elbow does\nnot have a speciﬁed angle, we will not be able to differentiate between an elbow or transition since they both are\nrepresented as a fso:Fitting and have two ports. To accommodate the difference in properties, the eight high-\nlevel FSO components have been nested into 19 medium-level components as shown in Fig. 5.\n3.3. Property relationships\nFPO provides 6 data properties: value, unit, abbreviation, design condition and curve. They can be used to relate\nan entity literal to an entity class. Combined, the 50 classes, 50 object properties and 6 data properties represent the\nsize and capacity of the FSO components.\nIn property modelling, there are different levels of complexity. Level 1 (L1) property modelling is a straight-\nforward approach where properties are directly linked to a component. For instance, in an L1 model, a property", "metadata": {"doc_id": "Efficient_management_and_compliance_check_of_HVAC_", "source_path": "data\\pdfs\\Efficient_management_and_compliance_check_of_HVAC_.pdf", "page": 10, "char_start": 1000, "char_end": 2142, "section_title": "Property relationships", "section_path": ["Flow properties ontology", "Property relationships"], "scanned": false}}
{"id": "Efficient_management_and_compliance_check_of_HVAC__p10_43", "text": "operty modelling is a straight-\nforward approach where properties are directly linked to a component. For instance, in an L1 model, a property", "metadata": {"doc_id": "Efficient_management_and_compliance_check_of_HVAC_", "source_path": "data\\pdfs\\Efficient_management_and_compliance_check_of_HVAC_.pdf", "page": 10, "char_start": 2000, "char_end": 2142, "section_title": "Property relationships", "section_path": ["Flow properties ontology", "Property relationships"], "scanned": false}}
{"id": "Efficient_management_and_compliance_check_of_HVAC__p11_44", "text": "11\nFig. 5. A class hierarchy of current and extended FSO components.\nFig. 6. Describing the relationship between an fso:Segment and its properties with FPO classes, object and data properties.\nlike fpo:hasLength would be directly associated with a component such as a pipe, typically using a direct data\nproperty like fso:Pipe fpo:hasLength ′15′xsd:decimal.\nHowever, Fig. 6 demonstrates a more complex approach, where we apply the Level 2 (L2) property modelling ap-\nproach as deﬁned by Bonduel and Pauwels [38]. In this approach, an fso:Segment can be related to the property\nfpo:Length with fpo:hasProperty. This relationship is then further speciﬁed with fpo:hasValue and", "metadata": {"doc_id": "Efficient_management_and_compliance_check_of_HVAC_", "source_path": "data\\pdfs\\Efficient_management_and_compliance_check_of_HVAC_.pdf", "page": 11, "char_start": 0, "char_end": 674, "section_title": "Property relationships", "section_path": ["Flow properties ontology", "Property relationships"], "scanned": false}}
{"id": "Efficient_management_and_compliance_check_of_HVAC__p12_45", "text": "12\nA. Kücükavci et al. / Efﬁcient management and compliance check of HVAC information\nfpo:hasUnit, connecting fpo:Length to the value ′15′ and the unit meter. This method is applied consistently\nfor fso:Port, following a one-to-many pattern.\nThe adoption of the L2 approach in FPO is driven by the need for structured ﬂexibility and scalability in represent-\ning HVAC properties. This model allows each property, such as fpo:Length, to have its own set of attributes like\nvalue and unit. Moreover, it can accommodate the addition of metadata, such as timestamps, enabling the represen-\ntation of both static and dynamic property values. This aspect is crucial in the HVAC domain, where property values\ncan change over time or under different conditions. By using the L2 approach, FPO effectively captures the diverse\nand dynamic nature of HVAC properties, avoiding the complexity of an excessive number of data properties. This\nmodelling choice aligns with our objective to create an ontology that is comprehensive in its domain representation\nand adaptable for future extensions.\n3.4. Reasoning\nSemantic Web technologies enable deductive reasoning as well as explicit assertions. A few examples of h", "metadata": {"doc_id": "Efficient_management_and_compliance_check_of_HVAC_", "source_path": "data\\pdfs\\Efficient_management_and_compliance_check_of_HVAC_.pdf", "page": 12, "char_start": 0, "char_end": 1200, "section_title": "Reasoning", "section_path": ["Flow properties ontology", "Reasoning"], "scanned": false}}
{"id": "Efficient_management_and_compliance_check_of_HVAC__p12_46", "text": " comprehensive in its domain representation\nand adaptable for future extensions.\n3.4. Reasoning\nSemantic Web technologies enable deductive reasoning as well as explicit assertions. A few examples of how FPO\nand the extended FSO allow for reasoning are presented in this section. Every object property in FPO is assigned\na domain and a range. For example, the attribute fpo:hasLength has the domain fso:Component and range\nfpo:Length. This means that whenever we have a subject of type fso:Component and a predicate of type\nfpo:hasLength, then the object must be of type fpo:Length. This also means that a reasoning engine will\nautomatically infer the class fpo:Length when the object property fpo:hasLength is provided in the input\ninstance data. This can similarly be done for all the other properties shown in Fig. 6.\nAn fso:Segment is shown in Fig. 7 supplying ﬂuid to an fso:Fitting with the property fso:supplies-\nFluidTo. However, with the extended FSO, it is possible to infer that if a segment port supplies ﬂuid to another\nport of a ﬁtting, then the segment must also feed ﬂuid to the ﬁtting (transitive object property). Figure 7 illustrates\nthe inferred knowledge.\nIn addition to the speci", "metadata": {"doc_id": "Efficient_management_and_compliance_check_of_HVAC_", "source_path": "data\\pdfs\\Efficient_management_and_compliance_check_of_HVAC_.pdf", "page": 12, "char_start": 1000, "char_end": 2200, "section_title": "Reasoning", "section_path": ["Flow properties ontology", "Reasoning"], "scanned": false}}
{"id": "Efficient_management_and_compliance_check_of_HVAC__p12_47", "text": "t port supplies ﬂuid to another\nport of a ﬁtting, then the segment must also feed ﬂuid to the ﬁtting (transitive object property). Figure 7 illustrates\nthe inferred knowledge.\nIn addition to the speciﬁc reasoning capabilities within FPO, it’s important to note how the ontology operates\nunder the Open World Assumption (OWA). This means that if FPO lacks data on a speciﬁc property, such as the\nﬂow rate of a pump, it doesn’t presume the information to be non-existent; rather, it’s understood as not currently\nknown or included in the ontology.\nWhen new information becomes available, like a previously unknown ﬂow rate, FPO can incorporate this data\nseamlessly, allowing the ontology to adapt and evolve over time. This reﬂects the dynamic nature of HVAC system\nproperties and their changing characteristics.\nIn practice, when querying a triplestore using FPO, missing data is presented as unknown rather than non-existent,\nconforming to the principles of the OWA. This approach ensures a realistic and dynamic representation of HVAC\ncomponents’ properties, essential for accurate modelling and analysis in ever-evolving HVAC environments.\nFig. 7. Deducing that the segment feeds ﬂuid to the ﬁtting", "metadata": {"doc_id": "Efficient_management_and_compliance_check_of_HVAC_", "source_path": "data\\pdfs\\Efficient_management_and_compliance_check_of_HVAC_.pdf", "page": 12, "char_start": 2000, "char_end": 3200, "section_title": "Reasoning", "section_path": ["Flow properties ontology", "Reasoning"], "scanned": false}}
{"id": "Efficient_management_and_compliance_check_of_HVAC__p12_48", "text": " and dynamic representation of HVAC\ncomponents’ properties, essential for accurate modelling and analysis in ever-evolving HVAC environments.\nFig. 7. Deducing that the segment feeds ﬂuid to the ﬁtting as a port of the segment supplies ﬂuid to a port of the ﬁtting.", "metadata": {"doc_id": "Efficient_management_and_compliance_check_of_HVAC_", "source_path": "data\\pdfs\\Efficient_management_and_compliance_check_of_HVAC_.pdf", "page": 12, "char_start": 3000, "char_end": 3264, "section_title": "Reasoning", "section_path": ["Flow properties ontology", "Reasoning"], "scanned": false}}
{"id": "Efficient_management_and_compliance_check_of_HVAC__p13_49", "text": "13\n4. HVAC rule model\nThe HVAC rule model, comprising 36 shapes and 122 constraints, is speciﬁcally designed to pre-validate HVAC\ndata models to ensure they contain all necessary information for hydraulic calculations. Accessible on GitHub,5 this\nmodel checks the composition of HVAC components, their systems, and their capacity and size-related properties.\nKey functionalities include determining whether a speciﬁc HVAC component is part of a system, verifying ﬂow\nports and connections to other components, and checking their size- and capacity-related properties such as ﬂow\nrate and diameter. Additionally, the model ensures that all HVAC components are interconnected from end to end.\nIn this context, the FSO and FPO are required for representing HVAC systems and components. However, the\ncore validation of these representations is conducted using our SHACL-based HVAC rule model. In our model, we\nemploy only hard constraints, as the absence of weak constraints signiﬁes that any data model violation renders\nit unsuitable for the hydraulic calculation task. This approach, focusing on speciﬁcity rather than a generic, all-\nencompassing rule model, allows for the creation of modular rule m", "metadata": {"doc_id": "Efficient_management_and_compliance_check_of_HVAC_", "source_path": "data\\pdfs\\Efficient_management_and_compliance_check_of_HVAC_.pdf", "page": 13, "char_start": 0, "char_end": 1200, "section_title": "Verifying pipes explicitly", "section_path": ["HVAC rule model", "Verifying pipes explicitly"], "scanned": false}}
{"id": "Efficient_management_and_compliance_check_of_HVAC__p13_50", "text": "violation renders\nit unsuitable for the hydraulic calculation task. This approach, focusing on speciﬁcity rather than a generic, all-\nencompassing rule model, allows for the creation of modular rule models, each designed for distinct HVAC tasks.\nBuilding upon this foundation, Eastman et al. [15] propose a four-step manual approach for rule-based compliance\nchecking. This methodology is signiﬁcant as it enables us to apply targeted corrections bypassing the time-intensive\nand error-laden process of manually inspecting large and complex BIM models. The steps include:\n1. Rule interpretation: Human-readable rules are converted into a machine-interpretable format that contains the\ninformation needed to be checked in the correct format, also known as the rule model.\n2. Building model preparation: Building information is converted into a machine-readable format, also known as\nthe data model.\n3. Rule execution: The data model is validated against the rule model.\n4. Rule check reporting: A validation report describing whether the data model has passed or violated any con-\nstraints.\nWhile this approach provides a comprehensive framework for compliance checking, it remains primarily passive,\n", "metadata": {"doc_id": "Efficient_management_and_compliance_check_of_HVAC_", "source_path": "data\\pdfs\\Efficient_management_and_compliance_check_of_HVAC_.pdf", "page": 13, "char_start": 1000, "char_end": 2200, "section_title": "Verifying pipes explicitly", "section_path": ["HVAC rule model", "Verifying pipes explicitly"], "scanned": false}}
{"id": "Efficient_management_and_compliance_check_of_HVAC__p13_51", "text": "dation report describing whether the data model has passed or violated any con-\nstraints.\nWhile this approach provides a comprehensive framework for compliance checking, it remains primarily passive,\nidentifying whether constraints are met or violated. To address this, Solihin et al. [52] introduce a proactive ﬁfth\nstep for automatic correction, empowering users or systems to not only be notiﬁed of violations but also to receive\ncorrective data, with options for automatic or manual implementation.\nFurthermore, Solihin et al. [52] suggest categorizing rules based on their complexity, ranging from 1–4:\nClass 1: entities and attributes are queried and checked against a single value.\nClass 2: additional values are calculated (e.g. distance) and checked.\nClass 3: additional geometry is created in order to calculate spatial relationships.\nClass 4: problem solutions are calculated, and new data is created.\nThis section will demonstrate how a SHACL-based rule can be designed for each complexity level, tailored\nspeciﬁcally to the HVAC domain.\n4.1. Verifying pipes explicitly\nIn hydraulic calculations, it is essential to know the location of each pipe segment in relation to upstream and\ndowns", "metadata": {"doc_id": "Efficient_management_and_compliance_check_of_HVAC_", "source_path": "data\\pdfs\\Efficient_management_and_compliance_check_of_HVAC_.pdf", "page": 13, "char_start": 2000, "char_end": 3200, "section_title": "Verifying pipes explicitly", "section_path": ["HVAC rule model", "Verifying pipes explicitly"], "scanned": false}}
{"id": "Efficient_management_and_compliance_check_of_HVAC__p13_52", "text": "y level, tailored\nspeciﬁcally to the HVAC domain.\n4.1. Verifying pipes explicitly\nIn hydraulic calculations, it is essential to know the location of each pipe segment in relation to upstream and\ndownstream HVAC components, as well as its roughness and length. Understanding the placement of HVAC com-\nponents in relation to other components helps determine how ﬂuids like air or water move through the system.\n“Upstream” refers to components that come before the pipe in the ﬂuid’s ﬂow direction, while “downstream” refers\nto those that come after. The roughness and length of the pipe are also crucial for calculating how efﬁciently the ﬂuid\nmoves through the system. The shape fsosh:Pipe applies 7 constraints to an fso:Pipe and has a complexity\nlevel of 1 and is described as follows:\nConstraint 1: An fso:Pipe must have exactly two ﬂow ports.\nConstraint 2: A pipe must feed ﬂuid to exactly one component.\n5https://github.com/Semantic-HVAC-Tool/Rule-Service/tree/main/Public/Shapes/fsosh.ttl", "metadata": {"doc_id": "Efficient_management_and_compliance_check_of_HVAC_", "source_path": "data\\pdfs\\Efficient_management_and_compliance_check_of_HVAC_.pdf", "page": 13, "char_start": 3000, "char_end": 3994, "section_title": "Verifying pipes explicitly", "section_path": ["HVAC rule model", "Verifying pipes explicitly"], "scanned": false}}
{"id": "Efficient_management_and_compliance_check_of_HVAC__p14_53", "text": "14\nA. Kücükavci et al. / Efﬁcient management and compliance check of HVAC information\nListing 1. A SHACL shape to constrain the number of fso:Port with fso:hasPort for each fso:Pipe\nConstraint 3: A pipe must be fed with ﬂuid by exactly one component.\nConstraint 4: A pipe must be connected to exactly one system.\nConstraint 5: Exactly one property of material type must be present in a pipe.\nConstraint 6: Exactly one property of length must be present for a pipe.\nConstraint 7: Exactly one property of roughness type must be present for a pipe.\nIn Listing 1, only the ﬁrst constraint is expressed in SHACL. The remaining 6 SHACL constraints are made\navailable on GitHub.6 In the ﬁrst constraint, the cardinality constraints sh:minCount and sh:maxCount are\napplied to check that the fso:Pipe has two ports. A minimum and maximum cardinality of 2 will satisfy this\nconstraint. In addition, we use the value type constraint sh:dataType with the value xsd:anyURI to ensure the\ntriple includes a URI. If the cardinality constraint or value type constraint is not satisﬁed, the message “A pipe must\nhave exactly two ﬂow ports” will be thrown.\n4.2. Verifying the demand versus capacity by derived informati", "metadata": {"doc_id": "Efficient_management_and_compliance_check_of_HVAC_", "source_path": "data\\pdfs\\Efficient_management_and_compliance_check_of_HVAC_.pdf", "page": 14, "char_start": 0, "char_end": 1200, "section_title": "A rule of thumb to verify pressure drop in pipes", "section_path": ["HVAC rule model", "A rule of thumb to verify pressure drop in pipes"], "scanned": false}}
{"id": "Efficient_management_and_compliance_check_of_HVAC__p14_54", "text": "the cardinality constraint or value type constraint is not satisﬁed, the message “A pipe must\nhave exactly two ﬂow ports” will be thrown.\n4.2. Verifying the demand versus capacity by derived information\nHVAC systems and their components must be designed to provide sufﬁcient heating, cooling, and/or ventilation\nto buildings. For example, an HVAC terminal is designed correctly if its capacity to heat, cool, and ventilate a space\nexceeds the space’s demand. With the following constraint, we demonstrate how the capacity of a supply air terminal\ncan be compared with the supply airﬂow demand of a space:\nConstraint 1: The supply air terminal capacity should be higher than the space’s required supply airﬂow demand.\nThe rule is expressed in a single SHACL shape, as shown in Listing 2, and the constraint belongs to the shape\nfsosh:AirTerminalCapacityCheck. A SPARQL-based constraint is used to implicitly ﬁnd the comparison\nbetween capacity and demand since it is not explicitly deﬁned. Because this rule requires derived information, it\nreaches complexity level 2. A nested SPARQL select query is shown in Listing 2. There can be more than one\nsupply air terminal in a space. To sum the capacity o", "metadata": {"doc_id": "Efficient_management_and_compliance_check_of_HVAC_", "source_path": "data\\pdfs\\Efficient_management_and_compliance_check_of_HVAC_.pdf", "page": 14, "char_start": 1000, "char_end": 2200, "section_title": "A rule of thumb to verify pressure drop in pipes", "section_path": ["HVAC rule model", "A rule of thumb to verify pressure drop in pipes"], "scanned": false}}
{"id": "Efficient_management_and_compliance_check_of_HVAC__p14_55", "text": "s rule requires derived information, it\nreaches complexity level 2. A nested SPARQL select query is shown in Listing 2. There can be more than one\nsupply air terminal in a space. To sum the capacity of all air terminals grouped by space, we apply an inner select\nquery. In the outer select query, we ﬁnd the supply airﬂow demand for each space and ﬁlter them according to the\nconstraint. This rule will be violated when the supply air terminal capacity exceeds the supply airﬂow demand of\nthe space.\n4.3. A rule of thumb to verify pressure drop in pipes\nThe pressure drop in pipes affects the economy of building projects, the material’s lifetime and the energy con-\nsumption of HVAC systems. A high-pressure loss will result in a lower cost price, a shorter lifetime, and higher\n6https://github.com/Semantic-HVAC-Tool/Rule-Service/tree/main/Public/Shapes/fsosh.ttl", "metadata": {"doc_id": "Efficient_management_and_compliance_check_of_HVAC_", "source_path": "data\\pdfs\\Efficient_management_and_compliance_check_of_HVAC_.pdf", "page": 14, "char_start": 2000, "char_end": 2865, "section_title": "A rule of thumb to verify pressure drop in pipes", "section_path": ["HVAC rule model", "A rule of thumb to verify pressure drop in pipes"], "scanned": false}}
{"id": "Efficient_management_and_compliance_check_of_HVAC__p15_56", "text": "15\nListing 2. The listing shows a SHACL shape to constrain the capacity of a supply air terminal versus the supply airﬂow demand of a space\nenergy consumption. As a result, most HVAC engineers apply guidelines to their design, e.g. a maximum pipe pres-\nsure loss of 100 Pa/m. This guideline or rule cannot be conveyed through explicit information. Calculations and\nderived information are also required. The complexity level of the shape fsosh:PipePressureDrop reaches\n3 because an engine is used to calculate the pressure drop and velocity of each distribution component. The engine\nis discussed in detail in Section 5.1. The only constraint in this rule is targeting an fso:Pipe and is described as\nfollows:\nConstraint 1: The pressure drop of a fso:Pipe shall not exceed 100 Pa/m.\nListing 3 shows the rule expression in SHACL. The pressure drop in pipes is not explicitly deﬁned in Pa/m in\nFSO or FPO. We can, however, implicitly ﬁnd the information using a SPARQL constraint. Our SPARQL-based\nconstraint contains a SPARQL select query. The select query returns all instances of fso:Pipe that exceeds\n100 Pa/m in pressure drop. By dividing the length of the pipe by the pressure drop at the outlet ", "metadata": {"doc_id": "Efficient_management_and_compliance_check_of_HVAC_", "source_path": "data\\pdfs\\Efficient_management_and_compliance_check_of_HVAC_.pdf", "page": 15, "char_start": 0, "char_end": 1200, "section_title": "Redesigning the size of pipes automatically", "section_path": ["HVAC rule model", "Redesigning the size of pipes automatically"], "scanned": false}}
{"id": "Efficient_management_and_compliance_check_of_HVAC__p15_57", "text": "traint contains a SPARQL select query. The select query returns all instances of fso:Pipe that exceeds\n100 Pa/m in pressure drop. By dividing the length of the pipe by the pressure drop at the outlet port, we can\ndetermine the pressure drop in Pa/m for each fso:Pipe instance.\n4.4. Redesigning the size of pipes automatically\nDuring the HVAC design process, HVAC components are often oversized or undersized due to limited time. Ra-\nther than just creating a rule that notiﬁes whether HVAC components are right-sized passively, we will generate new\ndata actively and add it to the model. By increasing the diameter of the pipe, we can decrease the pressure drop. That", "metadata": {"doc_id": "Efficient_management_and_compliance_check_of_HVAC_", "source_path": "data\\pdfs\\Efficient_management_and_compliance_check_of_HVAC_.pdf", "page": 15, "char_start": 1000, "char_end": 1667, "section_title": "Redesigning the size of pipes automatically", "section_path": ["HVAC rule model", "Redesigning the size of pipes automatically"], "scanned": false}}
{"id": "Efficient_management_and_compliance_check_of_HVAC__p16_58", "text": "16\nA. Kücükavci et al. / Efﬁcient management and compliance check of HVAC information\nListing 3. A SHACL shape to constrain the maximum pressure drop of each fso:Pipe\nis precisely what Listing 4 is doing. Listing 4 is an inference rule expressed in SHACL. Using a SPARQL construct\nquery, the pipe diameter is increased based on the material type and standard manufacturer size. The dimensions\nare limited to the material type PEX7 and range from 0.012 to 0.050 meters. For every fso:Pipe that violates\nthe previous rule, fsosh:PipePressureDrop, the active rule generates a new diameter. For instance, a pipe\ndiameter of 0.012 meters will automatically be increased to 0.015 meters and added to the data model. Since this\nrule can generate new information, it reaches a complexity level of 4.\n5. Demonstration environment\nThis section aims to demonstrate how capacity and size-related properties within the HVAC domain can be\nrepresented and validated for a real-world BIM model. The use case process is illustrated in Fig. 8.\nThe ﬁrst step of the process is to create a data graph and shape a graph. As the shape graph is already produced\nin Section 4, it does not require further processing and can ", "metadata": {"doc_id": "Efficient_management_and_compliance_check_of_HVAC_", "source_path": "data\\pdfs\\Efficient_management_and_compliance_check_of_HVAC_.pdf", "page": 16, "char_start": 0, "char_end": 1200, "section_title": "Demonstration environment", "section_path": ["Demonstration environment"], "scanned": false}}
{"id": "Efficient_management_and_compliance_check_of_HVAC__p16_59", "text": "is illustrated in Fig. 8.\nThe ﬁrst step of the process is to create a data graph and shape a graph. As the shape graph is already produced\nin Section 4, it does not require further processing and can be used as-is.8 In contrast, converting a BIM model\nwill create the data graph. This step is identical to the building model preparation phase of Eastman et al. [15].\nThe data graph contains BOT, FSO, and FPO vocabularies so that it matches with the rules in our shape graph and\ncan proceed to the rule execution phase of Eastman et al. [15]. Using these three vocabularies, we can describe the\nbuilding, its services, its interactions, and its properties. For example, we can express how the HVAC system or an\nHVAC component relates to the building or a speciﬁc room. Figure 9 shows the relation between BOT, FSO and\nFPO. The ﬁgure also illustrates how this network of ontologies can be used to represent the relationship between\na heating system, its components, properties, and the building it serves. It simpliﬁes the relationship between the\nHVAC components and their properties for illustration purposes.\nIn the second step, a rule execution process will be performed to check the shape graph a", "metadata": {"doc_id": "Efficient_management_and_compliance_check_of_HVAC_", "source_path": "data\\pdfs\\Efficient_management_and_compliance_check_of_HVAC_.pdf", "page": 16, "char_start": 1000, "char_end": 2200, "section_title": "Demonstration environment", "section_path": ["Demonstration environment"], "scanned": false}}
{"id": "Efficient_management_and_compliance_check_of_HVAC__p16_60", "text": "ves. It simpliﬁes the relationship between the\nHVAC components and their properties for illustration purposes.\nIn the second step, a rule execution process will be performed to check the shape graph against the data graph.\nThe data graph will be manually corrected if any constraints are violated during rule execution. Depending on the\nviolation type, manual correction can be achieved at three levels: BIM model, parser, or data graph. In cases where\n7https://www.bobvila.com/articles/pex-pipe\n8https://github.com/Semantic-HVAC-Tool/Rule-Service/tree/main/Public/Shapes/fsosh.ttl", "metadata": {"doc_id": "Efficient_management_and_compliance_check_of_HVAC_", "source_path": "data\\pdfs\\Efficient_management_and_compliance_check_of_HVAC_.pdf", "page": 16, "char_start": 2000, "char_end": 2581, "section_title": "Demonstration environment", "section_path": ["Demonstration environment"], "scanned": false}}
{"id": "Efficient_management_and_compliance_check_of_HVAC__p17_61", "text": "17\nListing 4. A SHACL shape to increase the size of a fso:Pipe automatically\nFig. 8. The process of performing conformance checking and design calculations for an HVAC model.\nwe do not want to modify the BIM model, we can use SPARQL on the data graph or add the information through\nthe parser.\nWhen the rule execution conforms, we can proceed to step 3. This step involves hydraulic calculations for ducts,\npipes, and ﬁttings to determine each distribution component’s pressure drop and ﬂuid velocity. These hydraulic\nresults will then be materialized in the data graph, facilitating a second conformance check. This check involves\ncomparing the shape graph against the data graph, now including the hydraulic calculations. Whenever a constraint\nis violated, an HVAC rule at level 4 in complexity from the shape graph will be used to correct the violation.\nWhen the rule execution conforms, we will have all the information necessary to size the ﬂow-moving device.\nStep 4 will therefore involve calculating the capacity of each ﬂow-moving device, represented in the data graph.\nAfter the ﬂow-moving devices’ capacities have been calculated, the result is given, and the process ends.", "metadata": {"doc_id": "Efficient_management_and_compliance_check_of_HVAC_", "source_path": "data\\pdfs\\Efficient_management_and_compliance_check_of_HVAC_.pdf", "page": 17, "char_start": 0, "char_end": 1183, "section_title": "Demonstration environment", "section_path": ["Demonstration environment"], "scanned": false}}
{"id": "Efficient_management_and_compliance_check_of_HVAC__p18_62", "text": "18\nA. Kücükavci et al. / Efﬁcient management and compliance check of HVAC information\nFig. 9. Combining multiple ontologies to represent building, spaces, systems, HVAC components, their properties and their relationships.\n5.1. A Semantic HVAC Tool\nWe developed the Semantic HVAC tool to perform the process shown in Fig. 8. The web tool has a microservi-\nce-oriented system architecture and contains four layers, which is illustrated in Fig. 10. The source code of the\nSemantic HVAC Tool and the material used to perform the process shown in Fig. 8 is made available on GitHub.9\nThis design choice is part of a broader strategy at the Department of Mechanical Engineering, Technical University\nof Denmark, emphasizing clarity, modularity, and domain-speciﬁc functionality in development. Each microservice\nis designed to encapsulate business logic for a speciﬁc domain or subdomain, ensuring that the complexities of one\nservice do not spill over into another. This approach enhances clarity and transparency, making it easier for students\nto understand, develop, and maintain each service independently. This architecture enables us to maintain a clean\nseparation of concerns, where each component ", "metadata": {"doc_id": "Efficient_management_and_compliance_check_of_HVAC_", "source_path": "data\\pdfs\\Efficient_management_and_compliance_check_of_HVAC_.pdf", "page": 18, "char_start": 0, "char_end": 1200, "section_title": "Presentation layer", "section_path": ["Demonstration environment", "A Semantic HVAC Tool", "Presentation layer"], "scanned": false}}
{"id": "Efficient_management_and_compliance_check_of_HVAC__p18_63", "text": "nsparency, making it easier for students\nto understand, develop, and maintain each service independently. This architecture enables us to maintain a clean\nseparation of concerns, where each component of the HVAC system – be it hydraulic calculations, ﬂow-moving\ndevice assessments, or rule checking – has its dedicated microservice. Moreover, the central orchestrator serves\nnot just as a communication hub but also as a means to preserve this separation, managing interactions between\nservices without intertwining their internal logics. The following sections ﬁrst describe the data ﬂow in detail and\nthen demonstrate the Semantic HVAC tool in a use case.\n5.1.1. Presentation layer\nThe presentation layer handles the user interface logic and displays data on the page. The Graphical User Interface\n(GUI) relies on React components to improve page rendering [45]. Using the GUI, users can perform conformance\n9https://github.com/Semantic-HVAC-Tool", "metadata": {"doc_id": "Efficient_management_and_compliance_check_of_HVAC_", "source_path": "data\\pdfs\\Efficient_management_and_compliance_check_of_HVAC_.pdf", "page": 18, "char_start": 1000, "char_end": 1948, "section_title": "Presentation layer", "section_path": ["Demonstration environment", "A Semantic HVAC Tool", "Presentation layer"], "scanned": false}}
{"id": "Efficient_management_and_compliance_check_of_HVAC__p19_64", "text": "19\nFig. 10. The system architecture of the Semantic HVAC Tool.\nchecking, perform hydraulic calculations, calculate the capacity of ﬂow-moving devices, and view the results. The\nuser has to initiate the conformance checking and calculations in the right order, as shown in Fig. 8. It is, therefore,\nnecessary for the user to initiate the conformance check ﬁrst. The user must correct all violations manually if any\nexist. If any violation exists, the GUI will not allow the user to perform the hydraulic calculation. Using this method,\nwe ensure that the data model contains all the information we need to calculate the hydraulics. The same applies\nto the capacity calculation of ﬂow-moving devices. If any violations occur after the second conformance check, the\nGUI will not allow the user to initiate the ﬂow-moving device calculation.\nThe GUI displays the conformance check results in two different tables. Based on the type of HVAC component,\nthe HVAC system, and size and capacity properties, the ﬁrst table shows the number of violations. The ﬁrst table\nis interactive. By selecting a speciﬁc HVAC component type in the ﬁrst table, the GUI will display the second\ntable. The second table lists ", "metadata": {"doc_id": "Efficient_management_and_compliance_check_of_HVAC_", "source_path": "data\\pdfs\\Efficient_management_and_compliance_check_of_HVAC_.pdf", "page": 19, "char_start": 0, "char_end": 1200, "section_title": "Communication layer", "section_path": ["Demonstration environment", "A Semantic HVAC Tool", "Communication layer"], "scanned": false}}
{"id": "Efficient_management_and_compliance_check_of_HVAC__p19_65", "text": "e ﬁrst table shows the number of violations. The ﬁrst table\nis interactive. By selecting a speciﬁc HVAC component type in the ﬁrst table, the GUI will display the second\ntable. The second table lists the violations for that speciﬁc HVAC component in more detail, including the instance\nID, constraint type, and violation description. Additionally, the GUI shows the results of the ﬂow-moving device\ncalculation in a table. The table displays the type, ID, ﬂow rate, and pressure of each ﬂow-moving device.\n5.1.2. Communication layer\nThe orchestrator handles the communication between the service components in the Semantic HVAC Tool via\nHTTP requests.", "metadata": {"doc_id": "Efficient_management_and_compliance_check_of_HVAC_", "source_path": "data\\pdfs\\Efficient_management_and_compliance_check_of_HVAC_.pdf", "page": 19, "char_start": 1000, "char_end": 1651, "section_title": "Communication layer", "section_path": ["Demonstration environment", "A Semantic HVAC Tool", "Communication layer"], "scanned": false}}
{"id": "Efficient_management_and_compliance_check_of_HVAC__p20_66", "text": "20\nA. Kücükavci et al. / Efﬁcient management and compliance check of HVAC information\nThere are two ways to communicate between services: decentralized and centralized. Decentralized communica-\ntion allows microservice components to communicate directly with each other. In central communication, microser-\nvices will communicate through an orchestrator service. As illustrated in Fig. 10, we have implemented a central\norchestrator to handle the communication between the presentation layer, the business layer, and the database layer.\nThe orchestrator is developed as an ExpressJS server [17] in NodeJS [34]. When the user initiates the conformance\nchecking, the following communication will happen:\n1. the client requests conformance checking results from the orchestrator.\n2. the orchestrator requests conformance checking results from the rule service.\n3. the rule service sends a rule model expressed in turtle format to the orchestrator.\n4. the orchestrator sends the rule model to the database.\n5. since the database already stores the data graph, it performs the rule execution and sends the conformance-\nchecking results expressed in JSON-LD to the orchestrator.\n6. the orchestrator sends t", "metadata": {"doc_id": "Efficient_management_and_compliance_check_of_HVAC_", "source_path": "data\\pdfs\\Efficient_management_and_compliance_check_of_HVAC_.pdf", "page": 20, "char_start": 0, "char_end": 1200, "section_title": "Parsing the BIM model", "section_path": ["Demonstration environment", "A Semantic HVAC Tool", "Parsing the BIM model"], "scanned": false}}
{"id": "Efficient_management_and_compliance_check_of_HVAC__p20_67", "text": "e.\n5. since the database already stores the data graph, it performs the rule execution and sends the conformance-\nchecking results expressed in JSON-LD to the orchestrator.\n6. the orchestrator sends the conformance-checking results to the client.\n7. the client displays the conformance checking results in two tables.\nSimilar to the conformance checking, the orchestrator handles communication between the different services\nwhen performing hydraulic- and ﬂow-moving device calculations.\n5.1.3. Business layer\nThe business logic is spread over multiple microservices in the web application. We have divided our logic into\ntwo microservices: the capacity service and the rule service, as shown in Fig. 10. Rule logic is handled by the rule\nservice, while the capacity service handles HVAC design logic. The rule service consists of two functions. When\nrequested, the ﬁrst function provides a shape graph in turtle format, while the second function performs an automatic\nconformance check and produces a validation report in JSON-LD format.\nThe capacity service has one function. When requested, it performs a hydraulic calculation and provides the\npressure drop result for each distribution component,", "metadata": {"doc_id": "Efficient_management_and_compliance_check_of_HVAC_", "source_path": "data\\pdfs\\Efficient_management_and_compliance_check_of_HVAC_.pdf", "page": 20, "char_start": 1000, "char_end": 2200, "section_title": "Parsing the BIM model", "section_path": ["Demonstration environment", "A Semantic HVAC Tool", "Parsing the BIM model"], "scanned": false}}
{"id": "Efficient_management_and_compliance_check_of_HVAC__p20_68", "text": "a validation report in JSON-LD format.\nThe capacity service has one function. When requested, it performs a hydraulic calculation and provides the\npressure drop result for each distribution component, which is of type fso:Pipe, fso:Duct, fso:Elbow,\nfso:Transition and fso:Tee. The output of the function is expressed in JSON-LD format. Both microser-\nvices are developed separately in FastAPI. To perform hydraulic calculations, we use the ﬂuids library [18].\n5.1.4. Database layer\nThe database layer consists of a Jena Fuseki server [2] that stores RDF data. The microservices in the busi-\nness layer share the same database to access information from different domains easily. Jena Fuseki has SPARQL,\nSHACL, and Update endpoints. The SPARQL endpoint retrieves data, while the Update endpoint inserts, deletes,\nor updates data.\nFor example, when the user initiates the ﬂow-moving device calculation, the client requests a list of ﬂow-moving\ndevices from the orchestrator. The orchestrator then requests three SPARQL queries.10 The ﬁrst SPARQL query is\nillustrated in A and is able to sum the pressure drops of the critical branch to determine the necessary pressure of\neach fso:Pump represented in t", "metadata": {"doc_id": "Efficient_management_and_compliance_check_of_HVAC_", "source_path": "data\\pdfs\\Efficient_management_and_compliance_check_of_HVAC_.pdf", "page": 20, "char_start": 2000, "char_end": 3200, "section_title": "Parsing the BIM model", "section_path": ["Demonstration environment", "A Semantic HVAC Tool", "Parsing the BIM model"], "scanned": false}}
{"id": "Efficient_management_and_compliance_check_of_HVAC__p20_69", "text": "sts three SPARQL queries.10 The ﬁrst SPARQL query is\nillustrated in A and is able to sum the pressure drops of the critical branch to determine the necessary pressure of\neach fso:Pump represented in the data graph. The second SPARQL query performs the same calculation for every\nfso:Fan, while the third query calculates the total ﬂow rate of each ﬂow-moving device. Once the orchestrator\nhits the SPARQL endpoint in the Jena Fuseki Server with the SPARQL queries, it retrieves the results and sends\nthem to the client to be displayed in the ﬂow-moving device table.\n5.1.5. Parsing the BIM model\nThe parser11 and the BIM model12 are not part of the Semantic HVAC Tool. The parser is developed as a .NET\nFramework (C-Sharp) plugin in Revit [47], using the Revit API, while the BIM model is developed as a BIM model\nin Revit. The parser has two functions; the ﬁrst function serializes Revit BIM objects into a data graph expressed in\nturtle syntax, while the second sends the data graph to the orchestrator via an HTTP request. The orchestrator then\nredirects the data graph to the database for storage.\n10https://github.com/Semantic-HVAC-Tool/Orchestrator-Service/tree/main/public/Queries\n11https://gi", "metadata": {"doc_id": "Efficient_management_and_compliance_check_of_HVAC_", "source_path": "data\\pdfs\\Efficient_management_and_compliance_check_of_HVAC_.pdf", "page": 20, "char_start": 3000, "char_end": 4200, "section_title": "Parsing the BIM model", "section_path": ["Demonstration environment", "A Semantic HVAC Tool", "Parsing the BIM model"], "scanned": false}}
{"id": "Efficient_management_and_compliance_check_of_HVAC__p20_70", "text": "ator via an HTTP request. The orchestrator then\nredirects the data graph to the database for storage.\n10https://github.com/Semantic-HVAC-Tool/Orchestrator-Service/tree/main/public/Queries\n11https://github.com/Semantic-HVAC-Tool/Parser\n12https://github.com/Semantic-HVAC-Tool/Other/blob/main/BIM-Model.rvt", "metadata": {"doc_id": "Efficient_management_and_compliance_check_of_HVAC_", "source_path": "data\\pdfs\\Efficient_management_and_compliance_check_of_HVAC_.pdf", "page": 20, "char_start": 4000, "char_end": 4304, "section_title": "Parsing the BIM model", "section_path": ["Demonstration environment", "A Semantic HVAC Tool", "Parsing the BIM model"], "scanned": false}}
{"id": "Efficient_management_and_compliance_check_of_HVAC__p21_71", "text": "21\n5.2. Results\nTo showcase the tool in use, we used a BIM model of a real-world building located in Sorø, Denmark. The\nbuilding is a primary school constructed in 2017 and named Frederiksberg Skole. Frederiksberg Skole has a gross\nﬂoor area of 6970 m2 and is divided into a northern building and a southern building. Each building has three-ﬂoor\nlevels, as shown in Fig. 11. The original BIM model has been modiﬁed by Seeberg and Tangeraas [50] to include\nonly the northern building and its heating and ventilation system. It has 86 rooms, each heated with radiators and\nventilated with supply and extract air terminals. Both systems are located in the basement of the northern building.\nThe results of parsing Frederiksberg Skole as a data model, performing two conformance checks, calculating the\nhydraulics and designing ﬂow-moving devices with the Semantic HVAC tool are presented in this section.\n5.2.1. Parsing the data model\nThe process of serializing Frederiksberg Skole from Revit to the Semantic HVAC Tool took 17.1 seconds to\ncomplete. Moreover, it took the Semantic HVAC Tool 8.3 seconds to store the data model of 369044 triples in the\ndatabase. The triples are also made available on G", "metadata": {"doc_id": "Efficient_management_and_compliance_check_of_HVAC_", "source_path": "data\\pdfs\\Efficient_management_and_compliance_check_of_HVAC_.pdf", "page": 21, "char_start": 0, "char_end": 1200, "section_title": "Conformance checking Frederiksberg Skole", "section_path": ["Demonstration environment", "Results", "Conformance checking Frederiksberg Skole"], "scanned": false}}
{"id": "Efficient_management_and_compliance_check_of_HVAC__p21_72", "text": "mantic HVAC Tool took 17.1 seconds to\ncomplete. Moreover, it took the Semantic HVAC Tool 8.3 seconds to store the data model of 369044 triples in the\ndatabase. The triples are also made available on GitHub.13 Since FSO represent HVAC components, we can extract\nthe sum of components by type. Table 3 shows that the data model consists of 6137 HVAC components, 36 HVAC\nsystems and 65851 HVAC size- and capacity-related properties. In total, the data model consists of 84887 instances.\nIn the conversion process from BIM to the ontologies, we achieved comprehensive coverage with varying degrees\nof direct mapping and manual processing:\n• BOT:\n– Directly Mapped: The parser was able to directly map instances of bot:Storey and bot:Space, along\nwith their metadata, from the BIM model.\n– Manual Input Required: The BIM model does not represent a building explicitly. It only provides a building\nname within the project information. Therefore, we had to generate a unique ID and assign the building\nname to it, to create an identiﬁable instance of type bot:Building.\n• FSO:\n– Directly Mapped: All HVAC systems and distribution components, including instances of type fso:-\nSuppluSystem, fso:ResturnSystem", "metadata": {"doc_id": "Efficient_management_and_compliance_check_of_HVAC_", "source_path": "data\\pdfs\\Efficient_management_and_compliance_check_of_HVAC_.pdf", "page": 21, "char_start": 1000, "char_end": 2200, "section_title": "Conformance checking Frederiksberg Skole", "section_path": ["Demonstration environment", "Results", "Conformance checking Frederiksberg Skole"], "scanned": false}}
{"id": "Efficient_management_and_compliance_check_of_HVAC__p21_73", "text": "to it, to create an identiﬁable instance of type bot:Building.\n• FSO:\n– Directly Mapped: All HVAC systems and distribution components, including instances of type fso:-\nSuppluSystem, fso:ResturnSystem, fso:Pipe,\nfso:Duct, fso:Elbow, fso:Transition, fso:Tee, fso:AirTerminal, fso:SpaceHeater\nwere directly converted.\n– Manual Classiﬁcation Needed: In the BIM model, certain key components like ﬂow moving and energy\nconversion devices were broadly labelled under’Mechanical Equipment’. To accurately categorize these\ncomponents within FSO, we manually assigned speciﬁc classiﬁcations, converting them into instances of\ntypes such as fso:Fan, fso:Pump, and fso:HeatExchanger. This manual intervention was essential\nfor ensuring that these critical components were correctly identiﬁed and represented in the ontology.\n• FPO:\n– Mostly Direct Mapping: The conversion of size and capacity-related properties was largely direct from the\nBIM model, except for the instances of type fpo:PressureDrop.\n– Calculated Externally: Instances of type fpo:PressureDrop, was not available in the BIM model. How-\never, it was computed externally and then added to the data graph.\nOverall, the conversion process was mar", "metadata": {"doc_id": "Efficient_management_and_compliance_check_of_HVAC_", "source_path": "data\\pdfs\\Efficient_management_and_compliance_check_of_HVAC_.pdf", "page": 21, "char_start": 2000, "char_end": 3200, "section_title": "Conformance checking Frederiksberg Skole", "section_path": ["Demonstration environment", "Results", "Conformance checking Frederiksberg Skole"], "scanned": false}}
{"id": "Efficient_management_and_compliance_check_of_HVAC__p21_74", "text": "ated Externally: Instances of type fpo:PressureDrop, was not available in the BIM model. How-\never, it was computed externally and then added to the data graph.\nOverall, the conversion process was marked by a high level of direct mapping for most elements.\n5.2.2. Conformance checking Frederiksberg Skole\nThe process of validating the data model against the rule model took 3.1 seconds to complete. Table 4 shows\nthe results of the ﬁrst conformance check. For example, Table 4 shows that instances of type fso:System in\nthe data model have violated the constraints 32 times. The HVAC rule model is also violated by instances of type\n13https://github.com/Semantic-HVAC-Tool/Other/blob/main/Data-Model.ttl", "metadata": {"doc_id": "Efficient_management_and_compliance_check_of_HVAC_", "source_path": "data\\pdfs\\Efficient_management_and_compliance_check_of_HVAC_.pdf", "page": 21, "char_start": 3000, "char_end": 3703, "section_title": "Conformance checking Frederiksberg Skole", "section_path": ["Demonstration environment", "Results", "Conformance checking Frederiksberg Skole"], "scanned": false}}
{"id": "Efficient_management_and_compliance_check_of_HVAC__p22_75", "text": "22\nA. Kücükavci et al. / Efﬁcient management and compliance check of HVAC information\nFig. 11. The illustration shows the ﬂoor plans of Frederiksberg Skole in Sorø, Denmark. The south building is marked with red, while the north\nbuilding is marked with blue [50].", "metadata": {"doc_id": "Efficient_management_and_compliance_check_of_HVAC_", "source_path": "data\\pdfs\\Efficient_management_and_compliance_check_of_HVAC_.pdf", "page": 22, "char_start": 0, "char_end": 263, "section_title": "Conformance checking Frederiksberg Skole", "section_path": ["Demonstration environment", "Results", "Conformance checking Frederiksberg Skole"], "scanned": false}}
{"id": "Efficient_management_and_compliance_check_of_HVAC__p23_76", "text": "23\nTable 3\nThe table shows the amount of HVAC components, systems\nand size- and capacity-related properties in the data model\nType\nAmount\nfso:EnergyConversionDevice\n1\nfso:Segment\n2766\nfso:Fitting\n2912\nfso:FlowMovingDevice\n3\nfso:FlowController\n85\nfso:Terminal\n370\nfso:System\n36\nfso:Port\n12827\nfpo:Property\n65851\nTotal\n84887\nTable 4\nResults of the ﬁrst conformance check, showing the number of\nviolations, based on HVAC component type, HVAC system and\nsize- and capacity-related properties. Note: for components not\nlisted, all validation rules were successfully passed\nType\nAmount\nfso:Pipe\n2\nfso:Duct\n2\nfso:SpaceHeater\n3\nfso:System\n32\nfso:Port\n251\nfpo:Property\n82\nTotal\n372\nTable 5\nResults of the ﬁrst conformance check, showing the ﬁrsttwo results of fso:System violations in details\nID\nConstraint type\nDescription\ninst:5eb8aa6a-0ed0-4fea-b226-dd7fa9ae035e-0019ec8a\nsh:MinCountConstraintComponent\nA return system must have at least\none component\ninst:98e9914f-25c6-4c43-a0fb-912eba89c13d-0019dbff\nsh:MinCountConstraintComponent\nA supply system must have at\nleast one component\nfso:Duct, fso:SpaceHeater, fso:Port, and fpo:Property. The total amount of violations is 372. We\ncan also observe, that the", "metadata": {"doc_id": "Efficient_management_and_compliance_check_of_HVAC_", "source_path": "data\\pdfs\\Efficient_management_and_compliance_check_of_HVAC_.pdf", "page": 23, "char_start": 0, "char_end": 1200, "section_title": "Conformance checking Frederiksberg Skole", "section_path": ["Demonstration environment", "Results", "Conformance checking Frederiksberg Skole"], "scanned": false}}
{"id": "Efficient_management_and_compliance_check_of_HVAC__p23_77", "text": "MinCountConstraintComponent\nA supply system must have at\nleast one component\nfso:Duct, fso:SpaceHeater, fso:Port, and fpo:Property. The total amount of violations is 372. We\ncan also observe, that the majority of violations are caused by instances of type fso:Port, which accounts for\napprox. 73% of the total number of violations.\nIn the client interface, accessing Table 5 is achieved by selecting the fso:System type in Table 4. Table 5 shows\ndetails of each violation committed by instances of the fso:System type. The GUI displays all 32 violations, but\nTable 5 is limited to the ﬁrst two violations, indicating that instance inst:5eb8aa6a... violates the SHACL\nconstraint type sh:MinCountConstrainComponent and throws the message “A return system must contain\nat least one component”.\nAll 32 violations were corrected in the data graph by performing the SPARQL update query shown in Ap-\npendix B directly in the Jena Fuseki Server. The query deletes all fso:SupplySystem and fso:Return-\nSystem instances that lack the predicate fso:hasComponent. As a result of deleting 32 instances of type\nfso:System from the original count of 36 (as shown in Table 3), only 4 instances of the fso:System type", "metadata": {"doc_id": "Efficient_management_and_compliance_check_of_HVAC_", "source_path": "data\\pdfs\\Efficient_management_and_compliance_check_of_HVAC_.pdf", "page": 23, "char_start": 1000, "char_end": 2200, "section_title": "Conformance checking Frederiksberg Skole", "section_path": ["Demonstration environment", "Results", "Conformance checking Frederiksberg Skole"], "scanned": false}}
{"id": "Efficient_management_and_compliance_check_of_HVAC__p23_78", "text": "instances that lack the predicate fso:hasComponent. As a result of deleting 32 instances of type\nfso:System from the original count of 36 (as shown in Table 3), only 4 instances of the fso:System type\nremain.", "metadata": {"doc_id": "Efficient_management_and_compliance_check_of_HVAC_", "source_path": "data\\pdfs\\Efficient_management_and_compliance_check_of_HVAC_.pdf", "page": 23, "char_start": 2000, "char_end": 2208, "section_title": "Conformance checking Frederiksberg Skole", "section_path": ["Demonstration environment", "Results", "Conformance checking Frederiksberg Skole"], "scanned": false}}
{"id": "Efficient_management_and_compliance_check_of_HVAC__p24_79", "text": "24\nA. Kücükavci et al. / Efﬁcient management and compliance check of HVAC information\nTable 6\nResults of performing the second conformance check, showing\nthe number of violations, when the hydraulic results are added\nto the data graph. Note: for components not listed, all validation\nrules were successfully passed\nType\nAmount\nfso:Pipe\n14\nTable 7\nResults of the second conformance check, displaying the ﬁrst two results of fso:Pipe violations in detail after running the hydraulic calculation\nID\nConstraint type\nDescription\ninst:745522df-9a78-4732-8b22-f56765e86201-002bec43\nsh:SPARQLConstraintComponent\nThe pressure drop of a pipe should not exceed\n100 Pa/m\ninst:745522df-9a78-4732-8b22-f56765e86201-002bec25\nsh:SPARQLConstraintComponent\nThe pressure drop of a pipe should not exceed\n100 Pa/m\nThe remaining violations were corrected manually in the BIM model, parser, and data graph, which resulted in\nan empty validation table. A blank validation table at this stage indicates that the data graph conforms, and we have\ncompleted step 2 of the process illustrated in Fig. 8.\n5.2.3. Hydraulic calculation & second conformance check\nPerforming the hydraulic calculation on Frederiksberg Skole took 5.4", "metadata": {"doc_id": "Efficient_management_and_compliance_check_of_HVAC_", "source_path": "data\\pdfs\\Efficient_management_and_compliance_check_of_HVAC_.pdf", "page": 24, "char_start": 0, "char_end": 1200, "section_title": "Flow-moving device capacity calculation and second validation", "section_path": ["Demonstration environment", "Results", "Flow-moving device capacity calculation and second validation"], "scanned": false}}
{"id": "Efficient_management_and_compliance_check_of_HVAC__p24_80", "text": "onforms, and we have\ncompleted step 2 of the process illustrated in Fig. 8.\n5.2.3. Hydraulic calculation & second conformance check\nPerforming the hydraulic calculation on Frederiksberg Skole took 5.4 seconds. The violation results of the second\nconformance check are shown in Table 6. It can be seen that instances of fso:Pipe are violating the HVAC rule\nmodel 14 times, and the total number of violations in step 3 of the process illustrated in Fig. 8 is 14.\nSelecting fso:Pipe in Table 4 in the client interface leads to Table 7. The table displays the violation de-\ntails for instances of type fso:Pipe. While the GUI of the Semantic HVAC Tool displays the violation de-\ntails of all 14 violations, Table 7 is limited to the ﬁrst two violations. The ﬁrst result indicates that the instance\ninst:745522df... is violating the SHACL constraint type sh:SPARQLConstraintComponent. The\nmessage it throws indicates that the pressure drop of the fpo:Pipe instance exceeds 100 Pa/m.\nIn the GUI, users can address all 14 violations using an interface element labeled’Solve all violations’. This\nelement, upon engagement, executes a predeﬁned SPARQL query, facilitating the correction of these violations\ndi", "metadata": {"doc_id": "Efficient_management_and_compliance_check_of_HVAC_", "source_path": "data\\pdfs\\Efficient_management_and_compliance_check_of_HVAC_.pdf", "page": 24, "char_start": 1000, "char_end": 2200, "section_title": "Flow-moving device capacity calculation and second validation", "section_path": ["Demonstration environment", "Results", "Flow-moving device capacity calculation and second validation"], "scanned": false}}
{"id": "Efficient_management_and_compliance_check_of_HVAC__p24_81", "text": "address all 14 violations using an interface element labeled’Solve all violations’. This\nelement, upon engagement, executes a predeﬁned SPARQL query, facilitating the correction of these violations\ndirectly within the data graph, thus eliminating the need for manual editing in the BIM model. The SPARQL query\nused is detailed and accessible on GitHub.14 If the corrections are implemented, the violations will be removed\nfrom Table 6, and the total number of violations will be decreased to 0. The violations at this stage were corrected\nautomatically in this way, which resulted in an empty validation table. A blank validation table at this stage indicates\nthat the data graph conforms, and we have completed step 3 of the process illustrated in Fig. 8.\n5.2.4. Flow-moving device capacity calculation and second validation\nSince we have performed the rule execution and hydraulic calculation, we are now ready to calculate the capac-\nity of each ﬂow-moving device represented in the data graph. The results of the ﬂow-moving device calculation are\nshown in Table 8. It took 87 seconds to calculate the total amount of ﬂow rate and pressure for each ﬂow-moving de-\nvice using three SPARQL queries a", "metadata": {"doc_id": "Efficient_management_and_compliance_check_of_HVAC_", "source_path": "data\\pdfs\\Efficient_management_and_compliance_check_of_HVAC_.pdf", "page": 24, "char_start": 2000, "char_end": 3200, "section_title": "Flow-moving device capacity calculation and second validation", "section_path": ["Demonstration environment", "Results", "Flow-moving device capacity calculation and second validation"], "scanned": false}}
{"id": "Efficient_management_and_compliance_check_of_HVAC__p24_82", "text": "e results of the ﬂow-moving device calculation are\nshown in Table 8. It took 87 seconds to calculate the total amount of ﬂow rate and pressure for each ﬂow-moving de-\nvice using three SPARQL queries and to display the results in the ﬂow-moving device table. Two fans and one pump\nare shown in Table 8 as ﬂow-moving devices. Table 8 provides the component ID, ﬂow rate, and pressure for each\nfso:Fan and fso:Pump. For example, it shows that the instance inst:0fc738e3... of type fso:Pump\nhas a total ﬂow rate of 0.84 L/s and a total pressure of 16867 pascal. The fan pressure includes the ductwork, air\nterminal, and AHU pressure drop. Using this information, correctly sized fans and pumps can be selected from\nmanufacturers’ product catalogues.\n14https://github.com/Semantic-HVAC-Tool/Orchestrator-Service/blob/main/public/Queries/autoSize.ttl", "metadata": {"doc_id": "Efficient_management_and_compliance_check_of_HVAC_", "source_path": "data\\pdfs\\Efficient_management_and_compliance_check_of_HVAC_.pdf", "page": 24, "char_start": 3000, "char_end": 3844, "section_title": "Flow-moving device capacity calculation and second validation", "section_path": ["Demonstration environment", "Results", "Flow-moving device capacity calculation and second validation"], "scanned": false}}
{"id": "Efficient_management_and_compliance_check_of_HVAC__p25_83", "text": "25\nTable 8\nFlow-moving device results showing the type of eachﬂow-moving device, its component ID, ﬂow rate and pressure\nType\nComponent ID\nFlow rate [L/s]\nPressure [Pa]\nfso:Fan\ninst:36aec977-8efa-403c-b1e6-3b29521aac43-002f6bf5\n7943\n824\nfso:Fan\ninst:f4ad7dcb-2875-4fe5-be51-f41510b75979-002f583e\n8124\n822\nfso:Pump\ninst:0fc738e3-3eb1-4344-b913-b3883e4083b0-0033212a\n0,84\n16867\n6. Discussion\nThis section describes the achievements, limitations, and future work.\n6.1. Achievements\nThis work introduces fundamental advancements in managing and ensuring the compliance of HVAC information\nduring the building design phase, using Semantic Web technologies. The achievements in this domain are:\n1. Capturing ﬂow-movements for the HVAC domain Our work signiﬁcantly extends the FSO ontology by\nincorporating fso:Port, a critical element for representing ﬂuid dynamics, which is essential for accurate\nHVAC system and component design. This extension allows for a detailed representation of ports in HVAC\ncomponents, such as valves and heat exchangers, capturing their varied sizes, ﬂow rates, and pressure drops.\nThis nuanced approach to capturing ﬂuid dynamics is not just an incremental update but a crucia", "metadata": {"doc_id": "Efficient_management_and_compliance_check_of_HVAC_", "source_path": "data\\pdfs\\Efficient_management_and_compliance_check_of_HVAC_.pdf", "page": 25, "char_start": 0, "char_end": 1200, "section_title": "Limitations in manual corrections due to varying expertise", "section_path": ["Discussion", "Limitations", "Limitations in manual corrections due to varying expertise"], "scanned": false}}
{"id": "Efficient_management_and_compliance_check_of_HVAC__p25_84", "text": "onents, such as valves and heat exchangers, capturing their varied sizes, ﬂow rates, and pressure drops.\nThis nuanced approach to capturing ﬂuid dynamics is not just an incremental update but a crucial advancement\nin accurately modelling HVAC systems, as it directly impacts system capacity and performance. The addition\nof fso:Port transforms the ontology from a mere representation of segments to a more comprehensive\nmodel that includes the nuances of ﬂuid movement, essential for realistic and practical HVAC engineering\napplications.\n2. Capturing Capacity- and Size-Related Properties for the HVAC Domain The development of FPO as\nan extension to FSO is an important achievement. It is designed to represent the capacity and size-related\nproperties of HVAC systems and components. This initiative to develop FPO separately, instead of integrating\nthese elements directly into FSO, was driven by the desire to maintain the core ontology’s simplicity and\nuser-friendliness. FPO adds necessary speciﬁcity for HVAC subdomains without overcomplicating FSO. This\nmodular approach aligns with the design philosophy of the SAREF ontology, ensuring that FSO remains\nbroadly accessible while FPO provides ", "metadata": {"doc_id": "Efficient_management_and_compliance_check_of_HVAC_", "source_path": "data\\pdfs\\Efficient_management_and_compliance_check_of_HVAC_.pdf", "page": 25, "char_start": 1000, "char_end": 2200, "section_title": "Limitations in manual corrections due to varying expertise", "section_path": ["Discussion", "Limitations", "Limitations in manual corrections due to varying expertise"], "scanned": false}}
{"id": "Efficient_management_and_compliance_check_of_HVAC__p25_85", "text": "iﬁcity for HVAC subdomains without overcomplicating FSO. This\nmodular approach aligns with the design philosophy of the SAREF ontology, ensuring that FSO remains\nbroadly accessible while FPO provides the required depth in key areas.\n3. Developing a rule model for the HVAC domain Our development of the HVAC rule model, featuring 36\nshapes and 122 constraints, introduces a novel approach to pre-validating HVAC data models. It checks HVAC\ncomponents, systems, and capacity and size properties, ensuring interconnectivity from end to end. This model\nis particularly designed for the HVAC domain to ensure that all necessary information for hydraulic calcula-\ntions is included, streamlining the validation process and enhancing data quality in the design phase.\n4. Implementation of practical solutions for the HVAC domain We developed the Semantic HVAC tool and\napplied it to a real-world building to demonstrate the feasibility of expressing and conforming an HVAC model.\nThe result is reliable data, suitable for performing speciﬁc HVAC tasks. Furthermore, the presented approach\ncontributes towards targeted corrections, bypassing the time-intensive and error-laden process of manually\ninspecting", "metadata": {"doc_id": "Efficient_management_and_compliance_check_of_HVAC_", "source_path": "data\\pdfs\\Efficient_management_and_compliance_check_of_HVAC_.pdf", "page": 25, "char_start": 2000, "char_end": 3200, "section_title": "Limitations in manual corrections due to varying expertise", "section_path": ["Discussion", "Limitations", "Limitations in manual corrections due to varying expertise"], "scanned": false}}
{"id": "Efficient_management_and_compliance_check_of_HVAC__p25_86", "text": "a, suitable for performing speciﬁc HVAC tasks. Furthermore, the presented approach\ncontributes towards targeted corrections, bypassing the time-intensive and error-laden process of manually\ninspecting large and complex BIM models. We have created a reliable data model to perform hydraulic calcu-\nlations and design the capacity of ﬂow-moving devices. Considering the time spent on conformance checking,\n(re-)sizing and quality control in the industry, this study implements technical solutions and demonstrates a\npath towards better data quality in BIM models.\n6.2. Limitations\n6.2.1. Limitations in manual corrections due to varying expertise\nThe process outlined in Fig. 8 uncovers a signiﬁcant limitation in real-world applications due to the varying coding\nexpertise among HVAC engineers. These engineers, while proﬁcient in their domain, often lack the specialized", "metadata": {"doc_id": "Efficient_management_and_compliance_check_of_HVAC_", "source_path": "data\\pdfs\\Efficient_management_and_compliance_check_of_HVAC_.pdf", "page": 25, "char_start": 3000, "char_end": 3870, "section_title": "Limitations in manual corrections due to varying expertise", "section_path": ["Discussion", "Limitations", "Limitations in manual corrections due to varying expertise"], "scanned": false}}
{"id": "Efficient_management_and_compliance_check_of_HVAC__p26_87", "text": "26\nA. Kücükavci et al. / Efﬁcient management and compliance check of HVAC information\nknowledge required to create SHACL-based rules. Their strength is in developing HVAC-related rules in a human-\ninterpretable format. However, translating these into machine-interpretable formats like SHACL necessitates the\ninvolvement of Semantic Web experts who possess the technical skills for accurate translation and implementation.\nFurthermore, HVAC engineers’ ability to perform manual corrections varies, especially in technical tasks such as\nmodifying parsers or adjusting data graphs, due to their limited coding skills and knowledge of the Semantic Web.\nThis creates a need for collaboration with Semantic Web experts, who, despite their technical knowledge, may\nlack a deep understanding of HVAC systems to resolve violations independently. Therefore, HVAC engineers with\nlimited coding capabilities may ﬁnd it challenging to fully engage in implementing the process in Fig. 8, indicating\na reliance on interdisciplinary collaboration.\n6.2.2. Query efﬁciency\nThe rule execution is performing well since it took only 3.1 seconds to validate The HVAC rule model consisting\nof 36 shapes and 122 constraints", "metadata": {"doc_id": "Efficient_management_and_compliance_check_of_HVAC_", "source_path": "data\\pdfs\\Efficient_management_and_compliance_check_of_HVAC_.pdf", "page": 26, "char_start": 0, "char_end": 1200, "section_title": "Implications", "section_path": ["Discussion", "Implications"], "scanned": false}}
{"id": "Efficient_management_and_compliance_check_of_HVAC__p26_88", "text": "interdisciplinary collaboration.\n6.2.2. Query efﬁciency\nThe rule execution is performing well since it took only 3.1 seconds to validate The HVAC rule model consisting\nof 36 shapes and 122 constraints against Frederiksberg Skole with 369054 triples. In contrast, it took 87 seconds\nto calculate the total pressure and ﬂow rate of each ﬂow-moving device, represented in the data graph using three\nSPARQL queries. Two of the SPARQL queries have a Filter Not Exists statement, which is responsible for the slow\nquery performance. Using the Filter Not Exists statement, we iterate through all HVAC components in the graph\nand return only those with ports that belong to the same HVAC system. Iterating through all HVAC components and\ntheir ports slows down the query efﬁciency. This could be improved by replacing the Filter Not Exists statement.\n6.2.3. Abstraction level of HVAC components\nFSO is limited to eight high-level HVAC components and 19 medium-level HVAC components. In practice,\nit is possible to subdivide FSO further. For example, a pump can be subdivided into centrifugal pumps, positive\ndisplacement pumps. There are also several levels of centrifugal pumps. To retain FSO as a lightweig", "metadata": {"doc_id": "Efficient_management_and_compliance_check_of_HVAC_", "source_path": "data\\pdfs\\Efficient_management_and_compliance_check_of_HVAC_.pdf", "page": 26, "char_start": 1000, "char_end": 2200, "section_title": "Implications", "section_path": ["Discussion", "Implications"], "scanned": false}}
{"id": "Efficient_management_and_compliance_check_of_HVAC__p26_89", "text": "le to subdivide FSO further. For example, a pump can be subdivided into centrifugal pumps, positive\ndisplacement pumps. There are also several levels of centrifugal pumps. To retain FSO as a lightweight ontology,\nwe did not nest further.\n6.2.4. Geometry-based constraints\nThe data graph and shape graph we developed in our research does not represent HVAC component geometry and\nits geometry-related properties nor validate geometry-based constraints, such as separation distances between HVAC\ncomponents and components from other domains or service distances, such as structural components. The delivery\nof BIM models with incorrect separation and service distances between HVAC components from the design phase\nto the construction phase is a common problem affecting a building project’s economy and schedule and should\ntherefore be a focal point in further development.\n6.3. Implications\nThis research signiﬁcantly contributes to reducing the information gap in the AEC domain by approaching the\nproblem from two directions: deﬁning a speciﬁc ontology for representation and compliance checking of infor-\nmation. This dual approach ensures not only that the information is well-structured and spec", "metadata": {"doc_id": "Efficient_management_and_compliance_check_of_HVAC_", "source_path": "data\\pdfs\\Efficient_management_and_compliance_check_of_HVAC_.pdf", "page": 26, "char_start": 2000, "char_end": 3200, "section_title": "Implications", "section_path": ["Discussion", "Implications"], "scanned": false}}
{"id": "Efficient_management_and_compliance_check_of_HVAC__p26_90", "text": "roblem from two directions: deﬁning a speciﬁc ontology for representation and compliance checking of infor-\nmation. This dual approach ensures not only that the information is well-structured and speciﬁc to the needs of\ndesigning HVAC systems, but also that it is accurate, reliable, and compliant with the requirements.\n1. Ontology Deﬁnition and Representation: The introduction of ontologies like BOT, SAREF, and FSO\npresents a more manageable approach compared to the comprehensive scope of IFC models. These ontologies\nare tailored to speciﬁc domains, making them more accessible and easier to implement in the early stages\nof design. During these stages, the detailed complexity of IFC may not be necessary. Lightweight ontologies\nprovide enough structure to begin a project effectively without overwhelming the stakeholders with excessive\ndetails. By abstracting only the necessary subsets of information, these ontologies allow designers and engi-\nneers to concentrate on relevant aspects of a building project. This focus might lead to increased efﬁciency\nand better use of resources.\n2. Domain-Speciﬁc Rule Models: The development of targeted, domain-speciﬁc validation models in modern\nbuil", "metadata": {"doc_id": "Efficient_management_and_compliance_check_of_HVAC_", "source_path": "data\\pdfs\\Efficient_management_and_compliance_check_of_HVAC_.pdf", "page": 26, "char_start": 3000, "char_end": 4200, "section_title": "Implications", "section_path": ["Discussion", "Implications"], "scanned": false}}
{"id": "Efficient_management_and_compliance_check_of_HVAC__p26_91", "text": " building project. This focus might lead to increased efﬁciency\nand better use of resources.\n2. Domain-Speciﬁc Rule Models: The development of targeted, domain-speciﬁc validation models in modern\nbuilding projects is a crucial response to the overwhelming volume of information. These models, speciﬁcally\ndesigned for certain tasks within the HVAC process, exemplify an efﬁcient, task-oriented rule modelling ap-\nproach. This strategy effectively reduces errors and signiﬁcantly expedites the compliance checking process,\nmaking manual validation of extensive BIM models increasingly impractical. Our rule model addresses this", "metadata": {"doc_id": "Efficient_management_and_compliance_check_of_HVAC_", "source_path": "data\\pdfs\\Efficient_management_and_compliance_check_of_HVAC_.pdf", "page": 26, "char_start": 4000, "char_end": 4626, "section_title": "Implications", "section_path": ["Discussion", "Implications"], "scanned": false}}
{"id": "Efficient_management_and_compliance_check_of_HVAC__p27_92", "text": "27\nchallenge by efﬁciently identifying violations and pinpointing their causes. This precise approach aids in both\nunderstanding the nature of these violations and guiding stakeholders towards necessary corrective actions. In\nour study, focusing on hydraulic calculations demonstrates how the rule model provides detailed, actionable\ninsights for that speciﬁc domain. This methodology is adaptable to other areas as well, such as developing val-\nidation models for converting BIM to Building Energy Model (BEM) in energy calculations or for structural\nanalysis in Structural Building Information Model (SBIM). Employing a domain-speciﬁc rule modelling ap-\nproach holds the potential to not only streamline compliance processes across various AEC domains but also\nsigniﬁcantly enhance the integrity of data within their respective information (BIM, BEM, SBIM or other)\nmodels.\n6.4. Future work\nThe proposal for future work in this paper can be divided into three steps.\nA literature review of geometry-related ontologies should be conducted ﬁrst. If a sufﬁcient geometry-related\nontology doesn’t exist, an existing one should be extended, or a new one should be developed to describe the\ngeometry and ", "metadata": {"doc_id": "Efficient_management_and_compliance_check_of_HVAC_", "source_path": "data\\pdfs\\Efficient_management_and_compliance_check_of_HVAC_.pdf", "page": 27, "char_start": 0, "char_end": 1200, "section_title": "Acknowledgements", "section_path": ["Acknowledgements"], "scanned": false}}
{"id": "Efficient_management_and_compliance_check_of_HVAC__p27_93", "text": "-related ontologies should be conducted ﬁrst. If a sufﬁcient geometry-related\nontology doesn’t exist, an existing one should be extended, or a new one should be developed to describe the\ngeometry and the relation between geometries.\nSecondly, to represent separation and service distances for HVAC components, the geometry-related ontology\nshould be interconnected with BOT, FSO, and FPO.\nLastly, a set of geometry-based constraints should be added to the HVAC rule model and validated against the\ndata graph.\n7. Conclusions\nThis paper presents a demonstration environment to represent and validate the composition of HVAC components,\ntheir systems, and their capacity and size-related properties using Semantic Web technologies. This paper aimed to:\n1. Extend FSO to support an alignment with the proposed FPO ontology.\n2. Propose the FPO ontology to represent HVAC components’ capacity and size-related properties.\n3. Propose a rule model for the HVAC domain.\n4. Produce a demonstration environment to show the conformance of an HVAC model.\n5. Use the demonstration environment to show how FPO and the HVAC rule model can support the description\nand validation of hydraulics in HVAC components and ", "metadata": {"doc_id": "Efficient_management_and_compliance_check_of_HVAC_", "source_path": "data\\pdfs\\Efficient_management_and_compliance_check_of_HVAC_.pdf", "page": 27, "char_start": 1000, "char_end": 2200, "section_title": "Acknowledgements", "section_path": ["Acknowledgements"], "scanned": false}}
{"id": "Efficient_management_and_compliance_check_of_HVAC__p27_94", "text": " to show the conformance of an HVAC model.\n5. Use the demonstration environment to show how FPO and the HVAC rule model can support the description\nand validation of hydraulics in HVAC components and the capacity of HVAC components.\nWe extended FSO with fso:Port to capture the nuances of ﬂuid dynamics, crucial for accurate HVAC com-\nponent and system design. We also extended FSO to represent 19-medium level component types. We developed\nFPO to represent the size- and capacity-related properties of HVAC components. FPO has a Description Logic\nexpressivity of ALRF(D) and contains 50 classes, 50 object properties and 6 data properties.\nMoreover, we developed an HVAC rule model that restricts the composition of HVAC components, their systems,\nand their size- and capacity-related properties. The rule model consists of 36 shapes and 122 constraints.\nA four-step process and the Semantic HVAC Tool were developed to demonstrate how a real-world building\nmodel can be represented, validated, and used to compute hydraulic calculations and design the capacity of a ﬂow-\nmoving device. Frederiksberg Skole consists of 369054 triples and was used as the real-world building model. We\nmanaged to perf", "metadata": {"doc_id": "Efficient_management_and_compliance_check_of_HVAC_", "source_path": "data\\pdfs\\Efficient_management_and_compliance_check_of_HVAC_.pdf", "page": 27, "char_start": 2000, "char_end": 3200, "section_title": "Acknowledgements", "section_path": ["Acknowledgements"], "scanned": false}}
{"id": "Efficient_management_and_compliance_check_of_HVAC__p27_95", "text": "used to compute hydraulic calculations and design the capacity of a ﬂow-\nmoving device. Frederiksberg Skole consists of 369054 triples and was used as the real-world building model. We\nmanaged to perform conformance checking twice. The ﬁrst rule execution resulted in 372 constraint violations,\nand the second resulted in 14 constraint violations. Finally, using the conformed model, we performed hydraulic\ncalculations and used the results to design the capacity of two fans and a pump, which were represented in the\nreal-world building model.\nAcknowledgements\nThis work was supported by EU-Interreg ÖKS “Data-baseret energiledelse i offentlige bygninger (Data-driven\nEnergy Management in Public Buildings)”; the Innovation Fund Denmark (grant 9065-00266A); the Ramboll Foun-\ndation; and COWI A/S. We thank Sorø municipality for providing the BIM model for Frederiksberg Skole.", "metadata": {"doc_id": "Efficient_management_and_compliance_check_of_HVAC_", "source_path": "data\\pdfs\\Efficient_management_and_compliance_check_of_HVAC_.pdf", "page": 27, "char_start": 3000, "char_end": 3878, "section_title": "Acknowledgements", "section_path": ["Acknowledgements"], "scanned": false}}
{"id": "Efficient_management_and_compliance_check_of_HVAC__p28_96", "text": "28\nA. Kücükavci et al. / Efﬁcient management and compliance check of HVAC information\nAppendix A. Querying fso:Pump pressure\nListing 5. A SPARQL query to calculate the pressure of each fso:Pump", "metadata": {"doc_id": "Efficient_management_and_compliance_check_of_HVAC_", "source_path": "data\\pdfs\\Efficient_management_and_compliance_check_of_HVAC_.pdf", "page": 28, "char_start": 0, "char_end": 193, "section_title": "Appendix A. Querying fso:Pump pressure", "section_path": ["Appendix A. Querying fso:Pump pressure"], "scanned": false}}
{"id": "Efficient_management_and_compliance_check_of_HVAC__p29_97", "text": "29\nAppendix B. Deleting systems, which don’t have any components\nListing 6. A SPARQL update query to remove all fpo:SupplySystem and fpo:ReturnSystem, which is missing the predicate\nfso:hasComponent from the data model\nReferences\n[1] K. Afsari, C.M. Eastman and D. Castro-Lacouture, Javascript object notation (JSON) data serialization for IFC schema in web-based\nBIM data exchange, Automation in Construction 77 (2017), 24–51, https://www.sciencedirect.com/science/article/pii/S0926580517300316.\ndoi:10.1016/j.autcon.2017.01.011.\n[2] Apache Jena Fuseki is a SPARQL server. https://github.com/apache/jena/blob/main/jena-fuseki2/apache-jena-fuseki/fuseki-server (ac-\ncessed in 2022).\n[3] ASHRAE, Ashrae’s BACnet Committee, Project Haystack and Brick Schema Collaborating to Provide Uniﬁed Data Semantic Modeling\nSolution, 2018. https://www.ashrae.org/about/news/2018/ashrae-s-bacnet-committee-project-haystack-and-brick-/-schema-collaborating-\nto-provide-uniﬁed-data-semantic/--modeling-solution (accessed in 2022).\n[4] B. Balaji, A. Bhattacharya, G. Fierro, J. Gao, J. Gluck, D. Hong, A. Johansen, J. Koh, J. Ploennigs, Y. Agarwal, M. Bergés, D. Culler,\nR.K. Gupta, M.B. Kjærgaard, M. Srivastava and ", "metadata": {"doc_id": "Efficient_management_and_compliance_check_of_HVAC_", "source_path": "data\\pdfs\\Efficient_management_and_compliance_check_of_HVAC_.pdf", "page": 29, "char_start": 0, "char_end": 1200, "section_title": "References", "section_path": ["References"], "scanned": false}}
{"id": "Efficient_management_and_compliance_check_of_HVAC__p29_98", "text": "ssed in 2022).\n[4] B. Balaji, A. Bhattacharya, G. Fierro, J. Gao, J. Gluck, D. Hong, A. Johansen, J. Koh, J. Ploennigs, Y. Agarwal, M. Bergés, D. Culler,\nR.K. Gupta, M.B. Kjærgaard, M. Srivastava and K. Whitehouse, Brick: Metadata schema for portable smart building applications, Applied\nEnergy 226 (2018), 1273–1292. doi:10.1016/j.apenergy.2018.02.091.\n[5] T.H. Beach, T. Kasim, H. Li, N. Nisbet and Y. Rezgui, Towards automated compliance checking in the construction industry, in: Database\nand Expert Systems Applications: 24th International Conference, DEXA 2013, Prague, Czech Republic, August 26–29, 2013, Proceedings,\nPart I, Vol. 24, Springer, 2013, pp. 366–380.\n[6] J. Beetz, J. van Leeuwen and B. de Vries, Ifcowl: A case of transforming express schemas into ontologies, Artiﬁcial Intelligence for\nEngineering Design, Analysis and Manufacturing 23(1) (2009), 89–101. doi:10.1017/S0890060409000122.\n[7] M.\nBonduel,\nTowards\na\nprops\nontology,\n2018,\nhttps://github.com/w3c-lbdcg/lbd/blob/gh-pages/presentations/props/\npresentationLBDcall20180312.\n[8] T. Chipman, T. Liebich, M. Weise, T. Chipman and T. Liebich, Speciﬁcation of a standardized format to deﬁne and exchange model view\ndeﬁnitions ", "metadata": {"doc_id": "Efficient_management_and_compliance_check_of_HVAC_", "source_path": "data\\pdfs\\Efficient_management_and_compliance_check_of_HVAC_.pdf", "page": 29, "char_start": 1000, "char_end": 2200, "section_title": "References", "section_path": ["References"], "scanned": false}}
{"id": "Efficient_management_and_compliance_check_of_HVAC__p29_99", "text": "es/presentations/props/\npresentationLBDcall20180312.\n[8] T. Chipman, T. Liebich, M. Weise, T. Chipman and T. Liebich, Speciﬁcation of a standardized format to deﬁne and exchange model view\ndeﬁnitions with exchange requirements and validation rules, buildingsmart, CIBSE-Building Information Modelling (2016).\n[9] L. Daniele, F. den Hartog and J. Roes, Created in close interaction with the industry: The smart appliances reference (saref) ontology, in:\nFormal Ontologies Meet Industry, R. Cuel and R. Young, eds, Springer International Publishing, Cham, 2015, pp. 100–112. doi:10.1007/\n978-3-319-21545-7_9.\n[10] M. Debellis, A practical guide to building OWL ontologies using protégé 5.5 and plugins, 2021.\n[11] Description Logic Expressivity. http://protegeproject.github.io/protege/views/ontology-metrics/ (accessed in 2022).\n[12] J. Dimyadi, C. Clifton, M. Spearpoint and R. Amor, Computerizing regulatory knowledge for building engineering design, Journal of\nComputing in Civil Engineering 30(5) (2016), C4016001. doi:10.1061/(ASCE)CP.1943-5487.0000572.\n[13] J. Dimyadi, P. Pauwels and R. Amor, Modelling and accessing regulatory knowledge for computer-assisted compliance audit, Electronic\nJourn", "metadata": {"doc_id": "Efficient_management_and_compliance_check_of_HVAC_", "source_path": "data\\pdfs\\Efficient_management_and_compliance_check_of_HVAC_.pdf", "page": 29, "char_start": 2000, "char_end": 3200, "section_title": "References", "section_path": ["References"], "scanned": false}}
{"id": "Efficient_management_and_compliance_check_of_HVAC__p29_100", "text": "(2016), C4016001. doi:10.1061/(ASCE)CP.1943-5487.0000572.\n[13] J. Dimyadi, P. Pauwels and R. Amor, Modelling and accessing regulatory knowledge for computer-assisted compliance audit, Electronic\nJournal of Information Technology in Construction 21 (2016), 317–336, Special issue CIB W78 2015 Special track on Compliance Check-\ning. https://www.itcon.org/2016/21.", "metadata": {"doc_id": "Efficient_management_and_compliance_check_of_HVAC_", "source_path": "data\\pdfs\\Efficient_management_and_compliance_check_of_HVAC_.pdf", "page": 29, "char_start": 3000, "char_end": 3362, "section_title": "References", "section_path": ["References"], "scanned": false}}
{"id": "Efficient_management_and_compliance_check_of_HVAC__p30_101", "text": "30\nA. Kücükavci et al. / Efﬁcient management and compliance check of HVAC information\n[14] A. Donkers, D. Yang, B. de Vries and N. Baken, Semantic web technologies for indoor environmental quality: A review and ontology\ndesign, Buildings 12(10) (2022), https://www.mdpi.com/2075-5309/12/10/1522. doi:10.3390/buildings12101522.\n[15] C. Eastman, J. Lee, Y. Jeong and J. Lee, Automatic rule-based checking of building designs, 2009, https://www.sciencedirect.com/science/\narticle/pii/S0926580509001198. doi:10.1016/j.autcon.2009.07.002.\n[16] I. Esnaola-Gonzalez and F. Díez, Integrating building and IOT data in demand response solutions, 2019.\n[17] Fast, unopinionated, minimalist web framework for node. https://github.com/expressjs/express (accessed in 2022).\n[18] FastAPI is a modern, fast (high-performance), web framework for building APIs with Python 3.6+ based on standard Python type hints.\nhttps://github.com/tiangolo/fastapi (accessed in 2022).\n[19] G. Governatori, M. Hashmi, H.-P. Lam, S. Villata and M. Palmirani, Semantic business process regulatory compliance checking using\nLegalRuleML, in: Knowledge Engineering and Knowledge Management, E. Blomqvist, P. Ciancarini, F. Poggi and F. Vi", "metadata": {"doc_id": "Efficient_management_and_compliance_check_of_HVAC_", "source_path": "data\\pdfs\\Efficient_management_and_compliance_check_of_HVAC_.pdf", "page": 30, "char_start": 0, "char_end": 1200, "section_title": "References", "section_path": ["References"], "scanned": false}}
{"id": "Efficient_management_and_compliance_check_of_HVAC__p30_102", "text": "illata and M. Palmirani, Semantic business process regulatory compliance checking using\nLegalRuleML, in: Knowledge Engineering and Knowledge Management, E. Blomqvist, P. Ciancarini, F. Poggi and F. Vitali, eds, Springer\nInternational Publishing, Cham, 2016, pp. 746–761. doi:10.1007/978-3-319-49004-5_48.\n[20] P. Hagedorn and M. König, Rule-based semantic validation for standardized linked building models, 2021. doi:10.1007/978-3-030-51295-\n8_53.\n[21] A.-H. Hamdan, M. Bonduel and R.J. Scherer, An ontological model for the representation of damage to constructions, 2019.\n[22] E. Hjelseth and N. Nisbet, Capturing normative constraints by use of the semantic mark-up rase methodology, in: Proceedings of CIB\nW78-W102 Conference, 2011, pp. 1–10.\n[23] A. Hogan, The Web of Data, 2020. doi:10.1007/978-3-030-51580-5.\n[24] A.S. Ismail, K.N. Ali and N.A. Iahad, A review on BIM-based automated code compliance checking system, in: 2017 International\nConference on Research and Innovation in Information Systems (ICRIIS), 2017, pp. 1–6. doi:10.1109/ICRIIS.2017.8002486.\n[25] D.A. Koonce and R.P. Judd, A visual modelling language for express schema, International Journal of Computer Integrated Manufact", "metadata": {"doc_id": "Efficient_management_and_compliance_check_of_HVAC_", "source_path": "data\\pdfs\\Efficient_management_and_compliance_check_of_HVAC_.pdf", "page": 30, "char_start": 1000, "char_end": 2200, "section_title": "References", "section_path": ["References"], "scanned": false}}
{"id": "Efficient_management_and_compliance_check_of_HVAC__p30_103", "text": " Systems (ICRIIS), 2017, pp. 1–6. doi:10.1109/ICRIIS.2017.8002486.\n[25] D.A. Koonce and R.P. Judd, A visual modelling language for express schema, International Journal of Computer Integrated Manufacturing\n14(5) (2001), 457–472. doi:10.1080/09511920010022495.\n[26] A.T. Kovacs and A. Micsik, BIM quality control based on requirement Linked Data, International Journal of Architectural Computing\n19(3) (2021), 431–448. doi:10.1177/14780771211012175.\n[27] V. Kukkonen, A. Kücükavci, M. Seidenschnur, M.H. Rasmussen, K.M. Smith and C.A. Hviid, An ontology to support ﬂow system de-\nscriptions from design to operation of buildings, Automation in Construction 134 (2022), 104067, https://www.sciencedirect.com/science/\narticle/pii/S0926580521005185. doi:10.1016/j.autcon.2021.104067.\n[28] G. Lee, J. Jeong, J. Won, C. Cho, S. You, S. Ham and H. Kang, Query performance of the IFC model server using an object-relational\ndatabase approach and a traditional relational database approach, Journal of Computing in Civil Engineering 28(2) (2014), 210–222. doi:10.\n1061/(ASCE)CP.1943-5487.0000256.\n[29] J. Lee and Y. Jeong, User-centric knowledge representations based on ontology for AEC design collaboration,", "metadata": {"doc_id": "Efficient_management_and_compliance_check_of_HVAC_", "source_path": "data\\pdfs\\Efficient_management_and_compliance_check_of_HVAC_.pdf", "page": 30, "char_start": 2000, "char_end": 3200, "section_title": "References", "section_path": ["References"], "scanned": false}}
{"id": "Efficient_management_and_compliance_check_of_HVAC__p30_104", "text": "ng in Civil Engineering 28(2) (2014), 210–222. doi:10.\n1061/(ASCE)CP.1943-5487.0000256.\n[29] J. Lee and Y. Jeong, User-centric knowledge representations based on ontology for AEC design collaboration, Computer-Aided Design\n44(8) (2012), 735–748, https://www.sciencedirect.com/science/article/pii/S0010448512000723. doi:10.1016/j.cad.2012.03.011.\n[30] J.-K. Lee, C.M. Eastman and Y.C. Lee, Implementation of a BIM domain-speciﬁc language for the building environment rule and analysis,\nJournal of Intelligent & Robotic Systems 79(3) (2015), 507–522. doi:10.1007/s10846-014-0117-7.\n[31] M. Lefrançois, J. Kalaoja, T. Ghariani, A. Zimmermann and T. Seas, D2. 2 SEAS Knowledge Model, Research Report, 2016.\n[32] S. Mehla and S. Jain, Rule languages for the Semantic Web, Vol. 755, 2019. doi:10.1007/978-981-13-1951-8_73.\n[33] M. Niknam and S. Karshenas, A shared ontology approach to semantic representation of BIM data, Automation in Construction 80 (2017),\n22–36, https://www.sciencedirect.com/science/article/pii/S0926580517302364. doi:10.1016/j.autcon.2017.03.013.\n[34] Node.js is an open-source, cross-platform, JavaScript runtime environment. https://github.com/nodejs/node (accessed in 2022).\n[35]", "metadata": {"doc_id": "Efficient_management_and_compliance_check_of_HVAC_", "source_path": "data\\pdfs\\Efficient_management_and_compliance_check_of_HVAC_.pdf", "page": 30, "char_start": 3000, "char_end": 4200, "section_title": "References", "section_path": ["References"], "scanned": false}}
{"id": "Efficient_management_and_compliance_check_of_HVAC__p30_105", "text": "article/pii/S0926580517302364. doi:10.1016/j.autcon.2017.03.013.\n[34] Node.js is an open-source, cross-platform, JavaScript runtime environment. https://github.com/nodejs/node (accessed in 2022).\n[35] J. Oraskari, M. Senthilvel and J. Beetz, SHACL is for LBD what mvdXML is for IFC, Vol. 78, 2021, pp. 11–15.\n[36] S. Park, Y.-C. Lee and J.-K. Lee, Deﬁnition of a domain-speciﬁc language for Korean building act sentences as an explicit computable\nform, Electronic Journal of Information Technology in Construction 21 (2016).\n[37] N. Pauen, D. Schlütter, J. Siwiecki, J. Frisch and C. Treeck, Integrated representation of building service systems: Topology extraction and\ntubes ontology, Bauphysik 42 (2020), 299–305. doi:10.1002/bapi.202000027.\n[38] P. Pauwels, Buildings and Semantics: Data Models and Web Technologies for the Built Environment, Buildings and Semantics, Taylor &\nFrancis Group, 2022. doi:10.1201/9781003204381.\n[39] P. Pauwels, A. Costin and M.H. Rasmussen, Knowledge graphs and Linked Data for the built environment, Structural Integrity 20 (2022),\n157–183. doi:10.1007/978-3-030-82430-3_7.\n[40] P. Pauwels, D. Van Deursen, R. Verstraeten, J. De Roo, R. De Meyer, R. Van de Walle a", "metadata": {"doc_id": "Efficient_management_and_compliance_check_of_HVAC_", "source_path": "data\\pdfs\\Efficient_management_and_compliance_check_of_HVAC_.pdf", "page": 30, "char_start": 4000, "char_end": 5200, "section_title": "References", "section_path": ["References"], "scanned": false}}
{"id": "Efficient_management_and_compliance_check_of_HVAC__p30_106", "text": "ked Data for the built environment, Structural Integrity 20 (2022),\n157–183. doi:10.1007/978-3-030-82430-3_7.\n[40] P. Pauwels, D. Van Deursen, R. Verstraeten, J. De Roo, R. De Meyer, R. Van de Walle and J. Van Campenhout, A semantic rule check-\ning environment for building performance checking, Automation in Construction 20(5) (2011), 506–518, https://www.sciencedirect.com/\nscience/article/pii/S0926580510001962. doi:10.1016/j.autcon.2010.11.017.\n[41] P. Pauwels, S. Zhang and Y.-C. Lee, Semantic web technologies in aec industry: A literature overview, Automation in Construction 73\n(2017), 145–165, https://www.sciencedirect.com/science/article/pii/S0926580516302928. doi:10.1016/j.autcon.2016.10.003.\n[42] M. Rasmussen, M. Lefrançois, G. Schneider and P. Pauwels, Bot: The building topology ontology of the w3c linked building data group,\nSemantic Web 12(1) (2020), 143–161. doi:10.3233/SW-200385.\n[43] M.H. Rasmussen, M. Lefrançois, P. Pauwels, C.A. Hviid and J. Karlshøj, Managing interrelated project information in AEC knowledge\ngraphs, Automation in Construction (2019). doi:10.1016/j.autcon.2019.102956.\n[44] M.H. Rasmussen, P. Pauwels, J. Karlshøj and C. Hviid, Proposing a central aec o", "metadata": {"doc_id": "Efficient_management_and_compliance_check_of_HVAC_", "source_path": "data\\pdfs\\Efficient_management_and_compliance_check_of_HVAC_.pdf", "page": 30, "char_start": 5000, "char_end": 6200, "section_title": "References", "section_path": ["References"], "scanned": false}}
{"id": "Efficient_management_and_compliance_check_of_HVAC__p30_107", "text": "d project information in AEC knowledge\ngraphs, Automation in Construction (2019). doi:10.1016/j.autcon.2019.102956.\n[44] M.H. Rasmussen, P. Pauwels, J. Karlshøj and C. Hviid, Proposing a central aec ontology that allows for domain speciﬁc extensions,\nHeraklion, Greece, 2017, pp. 237–244, http://itc.scix.net/paper/lc3-2017-153. doi:10.24928/JC3-2017/0153.\n[45] React, a JavaScript library for building user interfaces. https://github.com/reactjs/reactjs.org (accessed in 2022).\n[46] R. Ren and J. Zhang, Model information checking to support interoperable BIM usage in structural analysis, 2019, pp. 361–368. doi:10.\n1061/9780784482421.046.", "metadata": {"doc_id": "Efficient_management_and_compliance_check_of_HVAC_", "source_path": "data\\pdfs\\Efficient_management_and_compliance_check_of_HVAC_.pdf", "page": 30, "char_start": 6000, "char_end": 6641, "section_title": "References", "section_path": ["References"], "scanned": false}}
{"id": "Efficient_management_and_compliance_check_of_HVAC__p31_108", "text": "31\n[47] Revit: BIM software for designers, builders, and doers. https://www.autodesk.eu/products/revit (accessed in 2022).\n[48] R. Sacks, C. Eastman, G. Lee and P. Teicholz, BIM Handbook: A Guide to Building Information Modeling for Owners, Designers, Engi-\nneers, Contractors, and Facility Managers, 2018.\n[49] K. Schwabe, J. Teizer and M. König, Applying rule-based model-checking to construction site layout planning tasks, Automation in Con-\nstruction 97 (2019), 205–219, https://www.sciencedirect.com/science/article/pii/S0926580517310208. doi:10.1016/j.autcon.2018.10.012.\n[50] F. Seeberg and J. Tangeraas, Integration of Thermal Building Simulation Tools and Cloud-Based Building Information Models, 2022.\n[51] W. Solihin, J. Dimyadi, Y.-C. Lee, C. Eastman and R. Amor, The critical role of accessible data for BIM-based automated rule checking\nsystems, in: Proceedings of the Joint Conference on Computing in Construction (JC3), Vol. 1, 2017, pp. 53–60.\n[52] W. Solihin and C. Eastman, Classiﬁcation of rules for automated BIM rule checking development, Automation in Construction 53 (2015),\n69–82, https://www.sciencedirect.com/science/article/pii/S0926580515000370. doi:10.1016/j.autcon.201", "metadata": {"doc_id": "Efficient_management_and_compliance_check_of_HVAC_", "source_path": "data\\pdfs\\Efficient_management_and_compliance_check_of_HVAC_.pdf", "page": 31, "char_start": 0, "char_end": 1200, "section_title": "References", "section_path": ["References"], "scanned": false}}
{"id": "Efficient_management_and_compliance_check_of_HVAC__p31_109", "text": "ﬁcation of rules for automated BIM rule checking development, Automation in Construction 53 (2015),\n69–82, https://www.sciencedirect.com/science/article/pii/S0926580515000370. doi:10.1016/j.autcon.2015.03.003.\n[53] W. Solihin and C.M. Eastman, A knowledge representation approach in BIM rule requirement analysis using the conceptual graph, Journal\nof Information Technology in Construction 21 (2016), 370–401.\n[54] W. Solihin, N. Shaikh, X. Rong and K. Lam, Beyond interoperatibility of building model: A case for code compliance checking, in: Proc.,\nBPCAD Workshop, Carnegie Melon Univ., Pittsburgh, 2004.\n[55] R.K. Soman, M. Molina-Solana and J.K. Whyte, Linked-Data based Constraint-Checking (LDCC) to support look-ahead planning in\nconstruction, Automation in Construction 120 (2020), 103369. doi:10.1016/j.autcon.2020.103369.\n[56] S. Stolk and K. McGlinn, Validation of ifcOWL datasets using SHACL, Vol. 2636, 2020.\n[57] J. Tchouangouem, P. Pauwels, H. Fonbeyin, C. Magniont, M. Karray and B. Kamsu-Foguem, Integration of environmental data in BIM tool\n& linked building data, in: 7th International Workshop on Linked Data in Architecture and Construction, LDAC, 19-06-2019–21-06-2019,\nM. Poved", "metadata": {"doc_id": "Efficient_management_and_compliance_check_of_HVAC_", "source_path": "data\\pdfs\\Efficient_management_and_compliance_check_of_HVAC_.pdf", "page": 31, "char_start": 1000, "char_end": 2200, "section_title": "References", "section_path": ["References"], "scanned": false}}
{"id": "Efficient_management_and_compliance_check_of_HVAC__p31_110", "text": "amsu-Foguem, Integration of environmental data in BIM tool\n& linked building data, in: 7th International Workshop on Linked Data in Architecture and Construction, LDAC, 19-06-2019–21-06-2019,\nM. Poveda Villalon, P. Pauwels, R. De Klerk and A. Roxin, eds, Proceedings of the 7th Linked Data in Architecture and Construction\nWorkshop, CEUR Workshop Proceedings, CEUR-WS.org, 2019, pp. 78–91. http://linkedbuildingdata.net/ldac2019/.\n[58] J.F. Tchouanguem Djuedja, F.H. Abanda, B. Kamsu-Foguem, P. Pauwels, C. Magniont and M.H. Karray, An integrated linked building\ndata system: AEC industry case, Advances in Engineering Software 152 (2021), 102930, https://www.sciencedirect.com/science/article/pii/\nS0965997820309765. doi:10.1016/j.advengsoft.2020.102930.\n[59] W. Terkaj and A. Šoji´c, Ontology-based representation of IFC express rules: An enhancement of the ifcOWL ontology, Automation in\nConstruction 57 (2015), 188–201, https://www.sciencedirect.com/science/article/pii/S0926580515000886. doi:10.1016/j.autcon.2015.04.\n010.\n[60] E. van den Bersselaar, J. Heinen, M. Chaudron and P. Pauwels, Automatic validation of technical requirements for a BIM model using\nSemantic Web technologies, in: 1st 4", "metadata": {"doc_id": "Efficient_management_and_compliance_check_of_HVAC_", "source_path": "data\\pdfs\\Efficient_management_and_compliance_check_of_HVAC_.pdf", "page": 31, "char_start": 2000, "char_end": 3200, "section_title": "References", "section_path": ["References"], "scanned": false}}
{"id": "Efficient_management_and_compliance_check_of_HVAC__p31_111", "text": "1016/j.autcon.2015.04.\n010.\n[60] E. van den Bersselaar, J. Heinen, M. Chaudron and P. Pauwels, Automatic validation of technical requirements for a BIM model using\nSemantic Web technologies, in: 1st 4TU/14USA Research Day on Digitalization in the Built Environment, 01-04-2022, 2022.\n[61] W3C, A Semantic Web rule language combining OWL and RuleML, 2004. https://www.w3.org/Submission/SWRL/.\n[62] W3C, Notation3 (n3): A readable RDF syntax, 2011. https://www.w3.org/TeamSubmission/n3/.\n[63] W3C, Spin – overview and motivation, 2011. https://www.w3.org/Submission/spin-overview/.\n[64] W3C, Rif overview (second edition), 2013. https://www.w3.org/TR/rif-overview/.\n[65] W3C, Shapes constraint language (SHACL), 2017. https://www.w3.org/TR/shacl/.\n[66] W3C, SHACL and OWL compared, 2017. https://spinrdf.org/shacl-and-owl.html.\n[67] A. Wagner, W. Sprenger, C. Maurer, T.E. Kuhn and U. Rüppel, Building product ontology: Core ontology for linked building product data,\nAutomation in Construction 133 (2022), 103927, https://www.sciencedirect.com/science/article/pii/S0926580521003782. doi:10.1016/j.\nautcon.2021.103927.\n[68] J. Werbrouck, M. Senthilvel, J. Beetz and P. Pauwels, Querying heterogeneous l", "metadata": {"doc_id": "Efficient_management_and_compliance_check_of_HVAC_", "source_path": "data\\pdfs\\Efficient_management_and_compliance_check_of_HVAC_.pdf", "page": 31, "char_start": 3000, "char_end": 4200, "section_title": "References", "section_path": ["References"], "scanned": false}}
{"id": "Efficient_management_and_compliance_check_of_HVAC__p31_112", "text": "22), 103927, https://www.sciencedirect.com/science/article/pii/S0926580521003782. doi:10.1016/j.\nautcon.2021.103927.\n[68] J. Werbrouck, M. Senthilvel, J. Beetz and P. Pauwels, Querying heterogeneous linked building data with context-expanded graphql queries,\nin: 7th International Workshop on Linked Data in Architecture and Construction, LDAC, 19-06-2019–21-06-2019, M. Poveda-Villalón,\nP. Pauwels, R. De Klerk and A. Roxin, eds, Proceedings of the 7th Linked Data in Architecture and Construction Workshop, CEUR\nWorkshop Proceedings, CEUR-WS.org 2019, pp. 21–34. http://linkedbuildingdata.net/ldac2019/.", "metadata": {"doc_id": "Efficient_management_and_compliance_check_of_HVAC_", "source_path": "data\\pdfs\\Efficient_management_and_compliance_check_of_HVAC_.pdf", "page": 31, "char_start": 4000, "char_end": 4605, "section_title": "References", "section_path": ["References"], "scanned": false}}
